{"ast":null,"code":"'use strict';\n\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function (a) {\n    return a;\n  },\n  attrValueProcessor: function (a) {\n    return a;\n  }\n};\nconst props = ['attributeNamePrefix', 'attrNodeName', 'textNodeName', 'ignoreAttributes', 'cdataTagName', 'cdataPositionChar', 'format', 'indentBy', 'supressEmptyNode', 'tagValueProcessor', 'attrValueProcessor'];\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function /*a*/\n    () {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function /*a*/\n    () {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function () {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\nParser.prototype.parse = function (jObj) {\n  return this.j2x(jObj, 0).val;\n};\nParser.prototype.j2x = function (jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {\n    attrStr: attrStr,\n    val: val\n  };\n};\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return this.indentate(level) + '<' + key + attrStr + '>' + val +\n    //+ this.newLine\n    // + this.indentate(level)\n    '</' + key + this.tagEndChar;\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + this.tagEndChar + val +\n    //+ this.newLine\n    this.indentate(level) + '</' + key + this.tagEndChar;\n  }\n}\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return this.indentate(level) + '<' + key + attrStr + '>' + this.options.tagValueProcessor(val) + '</' + key + this.tagEndChar;\n}\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;","map":{"version":3,"names":["buildOptions","require","defaultOptions","attributeNamePrefix","attrNodeName","textNodeName","ignoreAttributes","cdataTagName","cdataPositionChar","format","indentBy","supressEmptyNode","tagValueProcessor","a","attrValueProcessor","props","Parser","options","isAttribute","attrPrefixLen","length","isCDATA","replaceCDATAstr","replaceCDATAarr","indentate","tagEndChar","newLine","buildTextNode","buildEmptyTextNode","buildObjNode","buildEmptyObjNode","buildTextValNode","buildObjectNode","prototype","parse","jObj","j2x","val","level","attrStr","keys","Object","len","i","key","Date","attr","Array","isArray","arrLen","j","item","result","Ks","L","str","cdata","replace","join","v","includes","repeat","name","startsWith","substr","module","exports"],"sources":["/Users/macbook/Documents/projet ipssi/temp-repo-chatbot/frontend/node_modules/fast-xml-parser/src/json2xml.js"],"sourcesContent":["'use strict';\n//parse Empty Node as self closing node\nconst buildOptions = require('./util').buildOptions;\n\nconst defaultOptions = {\n  attributeNamePrefix: '@_',\n  attrNodeName: false,\n  textNodeName: '#text',\n  ignoreAttributes: true,\n  cdataTagName: false,\n  cdataPositionChar: '\\\\c',\n  format: false,\n  indentBy: '  ',\n  supressEmptyNode: false,\n  tagValueProcessor: function(a) {\n    return a;\n  },\n  attrValueProcessor: function(a) {\n    return a;\n  },\n};\n\nconst props = [\n  'attributeNamePrefix',\n  'attrNodeName',\n  'textNodeName',\n  'ignoreAttributes',\n  'cdataTagName',\n  'cdataPositionChar',\n  'format',\n  'indentBy',\n  'supressEmptyNode',\n  'tagValueProcessor',\n  'attrValueProcessor',\n];\n\nfunction Parser(options) {\n  this.options = buildOptions(options, defaultOptions, props);\n  if (this.options.ignoreAttributes || this.options.attrNodeName) {\n    this.isAttribute = function(/*a*/) {\n      return false;\n    };\n  } else {\n    this.attrPrefixLen = this.options.attributeNamePrefix.length;\n    this.isAttribute = isAttribute;\n  }\n  if (this.options.cdataTagName) {\n    this.isCDATA = isCDATA;\n  } else {\n    this.isCDATA = function(/*a*/) {\n      return false;\n    };\n  }\n  this.replaceCDATAstr = replaceCDATAstr;\n  this.replaceCDATAarr = replaceCDATAarr;\n\n  if (this.options.format) {\n    this.indentate = indentate;\n    this.tagEndChar = '>\\n';\n    this.newLine = '\\n';\n  } else {\n    this.indentate = function() {\n      return '';\n    };\n    this.tagEndChar = '>';\n    this.newLine = '';\n  }\n\n  if (this.options.supressEmptyNode) {\n    this.buildTextNode = buildEmptyTextNode;\n    this.buildObjNode = buildEmptyObjNode;\n  } else {\n    this.buildTextNode = buildTextValNode;\n    this.buildObjNode = buildObjectNode;\n  }\n\n  this.buildTextValNode = buildTextValNode;\n  this.buildObjectNode = buildObjectNode;\n}\n\nParser.prototype.parse = function(jObj) {\n  return this.j2x(jObj, 0).val;\n};\n\nParser.prototype.j2x = function(jObj, level) {\n  let attrStr = '';\n  let val = '';\n  const keys = Object.keys(jObj);\n  const len = keys.length;\n  for (let i = 0; i < len; i++) {\n    const key = keys[i];\n    if (typeof jObj[key] === 'undefined') {\n      // supress undefined node\n    } else if (jObj[key] === null) {\n      val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n    } else if (jObj[key] instanceof Date) {\n      val += this.buildTextNode(jObj[key], key, '', level);\n    } else if (typeof jObj[key] !== 'object') {\n      //premitive type\n      const attr = this.isAttribute(key);\n      if (attr) {\n        attrStr += ' ' + attr + '=\"' + this.options.attrValueProcessor('' + jObj[key]) + '\"';\n      } else if (this.isCDATA(key)) {\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAstr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAstr('', jObj[key]);\n        }\n      } else {\n        //tag value\n        if (key === this.options.textNodeName) {\n          if (jObj[this.options.cdataTagName]) {\n            //value will added while processing cdata\n          } else {\n            val += this.options.tagValueProcessor('' + jObj[key]);\n          }\n        } else {\n          val += this.buildTextNode(jObj[key], key, '', level);\n        }\n      }\n    } else if (Array.isArray(jObj[key])) {\n      //repeated nodes\n      if (this.isCDATA(key)) {\n        val += this.indentate(level);\n        if (jObj[this.options.textNodeName]) {\n          val += this.replaceCDATAarr(jObj[this.options.textNodeName], jObj[key]);\n        } else {\n          val += this.replaceCDATAarr('', jObj[key]);\n        }\n      } else {\n        //nested nodes\n        const arrLen = jObj[key].length;\n        for (let j = 0; j < arrLen; j++) {\n          const item = jObj[key][j];\n          if (typeof item === 'undefined') {\n            // supress undefined node\n          } else if (item === null) {\n            val += this.indentate(level) + '<' + key + '/' + this.tagEndChar;\n          } else if (typeof item === 'object') {\n            const result = this.j2x(item, level + 1);\n            val += this.buildObjNode(result.val, key, result.attrStr, level);\n          } else {\n            val += this.buildTextNode(item, key, '', level);\n          }\n        }\n      }\n    } else {\n      //nested node\n      if (this.options.attrNodeName && key === this.options.attrNodeName) {\n        const Ks = Object.keys(jObj[key]);\n        const L = Ks.length;\n        for (let j = 0; j < L; j++) {\n          attrStr += ' ' + Ks[j] + '=\"' + this.options.attrValueProcessor('' + jObj[key][Ks[j]]) + '\"';\n        }\n      } else {\n        const result = this.j2x(jObj[key], level + 1);\n        val += this.buildObjNode(result.val, key, result.attrStr, level);\n      }\n    }\n  }\n  return {attrStr: attrStr, val: val};\n};\n\nfunction replaceCDATAstr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata + ']]' + this.tagEndChar;\n  } else {\n    return str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata + ']]' + this.tagEndChar);\n  }\n}\n\nfunction replaceCDATAarr(str, cdata) {\n  str = this.options.tagValueProcessor('' + str);\n  if (this.options.cdataPositionChar === '' || str === '') {\n    return str + '<![CDATA[' + cdata.join(']]><![CDATA[') + ']]' + this.tagEndChar;\n  } else {\n    for (let v in cdata) {\n      str = str.replace(this.options.cdataPositionChar, '<![CDATA[' + cdata[v] + ']]>');\n    }\n    return str + this.newLine;\n  }\n}\n\nfunction buildObjectNode(val, key, attrStr, level) {\n  if (attrStr && !val.includes('<')) {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      '>' +\n      val +\n      //+ this.newLine\n      // + this.indentate(level)\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  } else {\n    return (\n      this.indentate(level) +\n      '<' +\n      key +\n      attrStr +\n      this.tagEndChar +\n      val +\n      //+ this.newLine\n      this.indentate(level) +\n      '</' +\n      key +\n      this.tagEndChar\n    );\n  }\n}\n\nfunction buildEmptyObjNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildObjectNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n    //+ this.newLine\n  }\n}\n\nfunction buildTextValNode(val, key, attrStr, level) {\n  return (\n    this.indentate(level) +\n    '<' +\n    key +\n    attrStr +\n    '>' +\n    this.options.tagValueProcessor(val) +\n    '</' +\n    key +\n    this.tagEndChar\n  );\n}\n\nfunction buildEmptyTextNode(val, key, attrStr, level) {\n  if (val !== '') {\n    return this.buildTextValNode(val, key, attrStr, level);\n  } else {\n    return this.indentate(level) + '<' + key + attrStr + '/' + this.tagEndChar;\n  }\n}\n\nfunction indentate(level) {\n  return this.options.indentBy.repeat(level);\n}\n\nfunction isAttribute(name /*, options*/) {\n  if (name.startsWith(this.options.attributeNamePrefix)) {\n    return name.substr(this.attrPrefixLen);\n  } else {\n    return false;\n  }\n}\n\nfunction isCDATA(name) {\n  return name === this.options.cdataTagName;\n}\n\n//formatting\n//indentation\n//\\n after each closing or self closing tag\n\nmodule.exports = Parser;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}