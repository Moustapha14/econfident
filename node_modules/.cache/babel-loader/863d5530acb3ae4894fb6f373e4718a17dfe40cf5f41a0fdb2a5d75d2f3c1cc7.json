{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __read } from \"tslib\";\nimport { Amplify, ConsoleLogger, Hub } from '@aws-amplify/core';\nimport { Layout as PinpointInAppMessageLayout } from '@aws-sdk/client-pinpoint';\nimport isEmpty from 'lodash/isEmpty';\nvar AMPLIFY_SYMBOL = typeof Symbol !== 'undefined' && typeof Symbol.for === 'function' ? Symbol.for('amplify_default') : '@@amplify_default';\nvar DELIVERY_TYPE = 'IN_APP_MESSAGE';\nvar eventNameMemo = {};\nvar eventAttributesMemo = {};\nvar eventMetricsMemo = {};\nexport var logger = new ConsoleLogger('AWSPinpointProvider');\nexport var dispatchInAppMessagingEvent = function (event, data, message) {\n  Hub.dispatch('inAppMessaging', {\n    event: event,\n    data: data,\n    message: message\n  }, 'InAppMessaging', AMPLIFY_SYMBOL);\n};\nexport var recordAnalyticsEvent = function (event, message) {\n  if (!message) {\n    logger.debug('Unable to record analytics event - no InAppMessage was received');\n    return;\n  }\n  if (Amplify.Analytics && typeof Amplify.Analytics.record === 'function') {\n    var id = message.id,\n      metadata = message.metadata;\n    Amplify.Analytics.record({\n      name: event,\n      attributes: {\n        campaign_id: id,\n        delivery_type: DELIVERY_TYPE,\n        treatment_id: metadata === null || metadata === void 0 ? void 0 : metadata.treatmentId\n      }\n    });\n  } else {\n    logger.debug('Analytics module is not registered into Amplify');\n  }\n};\nexport var getStartOfDay = function () {\n  var now = new Date();\n  now.setHours(0, 0, 0, 0);\n  return now.toISOString();\n};\nexport var matchesEventType = function (_a, _b) {\n  var CampaignId = _a.CampaignId,\n    Schedule = _a.Schedule;\n  var eventType = _b.name;\n  var _c;\n  var EventType = ((_c = Schedule === null || Schedule === void 0 ? void 0 : Schedule.EventFilter) === null || _c === void 0 ? void 0 : _c.Dimensions).EventType;\n  var memoKey = CampaignId + \":\" + eventType;\n  if (!eventNameMemo.hasOwnProperty(memoKey)) {\n    eventNameMemo[memoKey] = !!(EventType === null || EventType === void 0 ? void 0 : EventType.Values.includes(eventType));\n  }\n  return eventNameMemo[memoKey];\n};\nexport var matchesAttributes = function (_a, _b) {\n  var CampaignId = _a.CampaignId,\n    Schedule = _a.Schedule;\n  var attributes = _b.attributes;\n  var _c;\n  var Attributes = ((_c = Schedule === null || Schedule === void 0 ? void 0 : Schedule.EventFilter) === null || _c === void 0 ? void 0 : _c.Dimensions).Attributes;\n  if (isEmpty(Attributes)) {\n    // if message does not have attributes defined it does not matter what attributes are on the event\n    return true;\n  }\n  if (isEmpty(attributes)) {\n    // if message does have attributes but the event does not then it always fails the check\n    return false;\n  }\n  var memoKey = CampaignId + \":\" + JSON.stringify(attributes);\n  if (!eventAttributesMemo.hasOwnProperty(memoKey)) {\n    eventAttributesMemo[memoKey] = Object.entries(Attributes).every(function (_a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        Values = _b[1].Values;\n      return Values.includes(attributes[key]);\n    });\n  }\n  return eventAttributesMemo[memoKey];\n};\nexport var matchesMetrics = function (_a, _b) {\n  var CampaignId = _a.CampaignId,\n    Schedule = _a.Schedule;\n  var metrics = _b.metrics;\n  var _c;\n  var Metrics = ((_c = Schedule === null || Schedule === void 0 ? void 0 : Schedule.EventFilter) === null || _c === void 0 ? void 0 : _c.Dimensions).Metrics;\n  if (isEmpty(Metrics)) {\n    // if message does not have metrics defined it does not matter what metrics are on the event\n    return true;\n  }\n  if (isEmpty(metrics)) {\n    // if message does have metrics but the event does not then it always fails the check\n    return false;\n  }\n  var memoKey = CampaignId + \":\" + JSON.stringify(metrics);\n  if (!eventMetricsMemo.hasOwnProperty(memoKey)) {\n    eventMetricsMemo[memoKey] = Object.entries(Metrics).every(function (_a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        _c = _b[1],\n        ComparisonOperator = _c.ComparisonOperator,\n        Value = _c.Value;\n      var compare = getComparator(ComparisonOperator);\n      // if there is some unknown comparison operator, treat as a comparison failure\n      return compare ? compare(Value, metrics[key]) : false;\n    });\n  }\n  return eventMetricsMemo[memoKey];\n};\nexport var getComparator = function (operator) {\n  switch (operator) {\n    case 'EQUAL':\n      return function (metricsVal, eventVal) {\n        return metricsVal === eventVal;\n      };\n    case 'GREATER_THAN':\n      return function (metricsVal, eventVal) {\n        return metricsVal < eventVal;\n      };\n    case 'GREATER_THAN_OR_EQUAL':\n      return function (metricsVal, eventVal) {\n        return metricsVal <= eventVal;\n      };\n    case 'LESS_THAN':\n      return function (metricsVal, eventVal) {\n        return metricsVal > eventVal;\n      };\n    case 'LESS_THAN_OR_EQUAL':\n      return function (metricsVal, eventVal) {\n        return metricsVal >= eventVal;\n      };\n    default:\n      return null;\n  }\n};\nexport var isBeforeEndDate = function (_a) {\n  var Schedule = _a.Schedule;\n  if (!(Schedule === null || Schedule === void 0 ? void 0 : Schedule.EndDate)) {\n    return true;\n  }\n  return new Date() < new Date(Schedule.EndDate);\n};\nexport var isQuietTime = function (message) {\n  var Schedule = message.Schedule;\n  if (!(Schedule === null || Schedule === void 0 ? void 0 : Schedule.QuietTime)) {\n    return false;\n  }\n  var pattern = /^[0-2]\\d:[0-5]\\d$/; // basic sanity check, not a fully featured HH:MM validation\n  var _a = Schedule.QuietTime,\n    Start = _a.Start,\n    End = _a.End;\n  if (!Start || !End || Start === End || !pattern.test(Start) || !pattern.test(End)) {\n    return false;\n  }\n  var now = new Date();\n  var start = new Date(now);\n  var end = new Date(now);\n  var _b = __read(Start.split(':'), 2),\n    startHours = _b[0],\n    startMinutes = _b[1];\n  var _c = __read(End.split(':'), 2),\n    endHours = _c[0],\n    endMinutes = _c[1];\n  start.setHours(Number.parseInt(startHours, 10), Number.parseInt(startMinutes, 10), 0, 0);\n  end.setHours(Number.parseInt(endHours, 10), Number.parseInt(endMinutes, 10), 0, 0);\n  // if quiet time includes midnight, bump the end time to the next day\n  if (start > end) {\n    end.setDate(end.getDate() + 1);\n  }\n  var isQuietTime = now >= start && now <= end;\n  if (isQuietTime) {\n    logger.debug('message filtered due to quiet time', message);\n  }\n  return isQuietTime;\n};\nexport var clearMemo = function () {\n  eventNameMemo = {};\n  eventAttributesMemo = {};\n  eventMetricsMemo = {};\n};\n// in the pinpoint console when a message is created with a Modal or Full Screen layout,\n// it is assigned a layout value of MOBILE_FEED or OVERLAYS respectively in the message payload.\n// In the future, Pinpoint will be updating the layout values in the aforementioned scenario\n// to MODAL and FULL_SCREEN.\n//\n// This utility acts as a safeguard to ensure that:\n// - 1. the usage of MOBILE_FEED and OVERLAYS as values for message layouts are not leaked\n//      outside the Pinpoint provider\n// - 2. Amplify correctly handles the legacy layout values from Pinpoint after they are updated\nexport var interpretLayout = function (layout) {\n  if (layout === PinpointInAppMessageLayout.MOBILE_FEED) {\n    return 'MODAL';\n  }\n  if (layout === PinpointInAppMessageLayout.OVERLAYS) {\n    return 'FULL_SCREEN';\n  }\n  // cast as PinpointInAppMessage['InAppMessage']['Layout'] allows `string` as a value\n  return layout;\n};\nexport var extractContent = function (_a) {\n  var message = _a.InAppMessage;\n  var _b, _c;\n  return (_c = (_b = message === null || message === void 0 ? void 0 : message.Content) === null || _b === void 0 ? void 0 : _b.map(function (content) {\n    var BackgroundColor = content.BackgroundColor,\n      BodyConfig = content.BodyConfig,\n      HeaderConfig = content.HeaderConfig,\n      ImageUrl = content.ImageUrl,\n      PrimaryBtn = content.PrimaryBtn,\n      SecondaryBtn = content.SecondaryBtn;\n    var defaultPrimaryButton = PrimaryBtn === null || PrimaryBtn === void 0 ? void 0 : PrimaryBtn.DefaultConfig;\n    var defaultSecondaryButton = SecondaryBtn === null || SecondaryBtn === void 0 ? void 0 : SecondaryBtn.DefaultConfig;\n    var extractedContent = {};\n    if (BackgroundColor) {\n      extractedContent.container = {\n        style: {\n          backgroundColor: BackgroundColor\n        }\n      };\n    }\n    if (HeaderConfig) {\n      extractedContent.header = {\n        content: HeaderConfig.Header,\n        style: {\n          color: HeaderConfig.TextColor,\n          textAlign: HeaderConfig.Alignment.toLowerCase()\n        }\n      };\n    }\n    if (BodyConfig) {\n      extractedContent.body = {\n        content: BodyConfig.Body,\n        style: {\n          color: BodyConfig.TextColor,\n          textAlign: BodyConfig.Alignment.toLowerCase()\n        }\n      };\n    }\n    if (ImageUrl) {\n      extractedContent.image = {\n        src: ImageUrl\n      };\n    }\n    if (defaultPrimaryButton) {\n      extractedContent.primaryButton = {\n        title: defaultPrimaryButton.Text,\n        action: defaultPrimaryButton.ButtonAction,\n        url: defaultPrimaryButton.Link,\n        style: {\n          backgroundColor: defaultPrimaryButton.BackgroundColor,\n          borderRadius: defaultPrimaryButton.BorderRadius,\n          color: defaultPrimaryButton.TextColor\n        }\n      };\n    }\n    if (defaultSecondaryButton) {\n      extractedContent.secondaryButton = {\n        title: defaultSecondaryButton.Text,\n        action: defaultSecondaryButton.ButtonAction,\n        url: defaultSecondaryButton.Link,\n        style: {\n          backgroundColor: defaultSecondaryButton.BackgroundColor,\n          borderRadius: defaultSecondaryButton.BorderRadius,\n          color: defaultSecondaryButton.TextColor\n        }\n      };\n    }\n    return extractedContent;\n  })) !== null && _c !== void 0 ? _c : [];\n};\nexport var extractMetadata = function (_a) {\n  var InAppMessage = _a.InAppMessage,\n    Priority = _a.Priority,\n    Schedule = _a.Schedule,\n    TreatmentId = _a.TreatmentId;\n  return {\n    customData: InAppMessage === null || InAppMessage === void 0 ? void 0 : InAppMessage.CustomConfig,\n    endDate: Schedule === null || Schedule === void 0 ? void 0 : Schedule.EndDate,\n    priority: Priority,\n    treatmentId: TreatmentId\n  };\n};","map":{"version":3,"names":["__read","Amplify","ConsoleLogger","Hub","Layout","PinpointInAppMessageLayout","isEmpty","AMPLIFY_SYMBOL","Symbol","for","DELIVERY_TYPE","eventNameMemo","eventAttributesMemo","eventMetricsMemo","logger","dispatchInAppMessagingEvent","event","data","message","dispatch","recordAnalyticsEvent","debug","Analytics","record","id","metadata","name","attributes","campaign_id","delivery_type","treatment_id","treatmentId","getStartOfDay","now","Date","setHours","toISOString","matchesEventType","_a","_b","CampaignId","Schedule","eventType","_c","EventType","EventFilter","Dimensions","memoKey","hasOwnProperty","Values","includes","matchesAttributes","Attributes","JSON","stringify","Object","entries","every","key","matchesMetrics","metrics","Metrics","ComparisonOperator","Value","compare","getComparator","operator","metricsVal","eventVal","isBeforeEndDate","EndDate","isQuietTime","QuietTime","pattern","Start","End","test","start","end","split","startHours","startMinutes","endHours","endMinutes","Number","parseInt","setDate","getDate","clearMemo","interpretLayout","layout","MOBILE_FEED","OVERLAYS","extractContent","InAppMessage","Content","map","content","BackgroundColor","BodyConfig","HeaderConfig","ImageUrl","PrimaryBtn","SecondaryBtn","defaultPrimaryButton","DefaultConfig","defaultSecondaryButton","extractedContent","container","style","backgroundColor","header","Header","color","TextColor","textAlign","Alignment","toLowerCase","body","Body","image","src","primaryButton","title","Text","action","ButtonAction","url","Link","borderRadius","BorderRadius","secondaryButton","extractMetadata","Priority","TreatmentId","customData","CustomConfig","endDate","priority"],"sources":["/Users/macbook/Documents/Chatapp/temp-repo-chatbot/frontend/node_modules/@aws-amplify/notifications/lib-esm/InAppMessaging/Providers/AWSPinpointProvider/utils.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __read } from \"tslib\";\nimport { Amplify, ConsoleLogger, Hub } from '@aws-amplify/core';\nimport { Layout as PinpointInAppMessageLayout, } from '@aws-sdk/client-pinpoint';\nimport isEmpty from 'lodash/isEmpty';\nvar AMPLIFY_SYMBOL = (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function'\n    ? Symbol.for('amplify_default')\n    : '@@amplify_default');\nvar DELIVERY_TYPE = 'IN_APP_MESSAGE';\nvar eventNameMemo = {};\nvar eventAttributesMemo = {};\nvar eventMetricsMemo = {};\nexport var logger = new ConsoleLogger('AWSPinpointProvider');\nexport var dispatchInAppMessagingEvent = function (event, data, message) {\n    Hub.dispatch('inAppMessaging', { event: event, data: data, message: message }, 'InAppMessaging', AMPLIFY_SYMBOL);\n};\nexport var recordAnalyticsEvent = function (event, message) {\n    if (!message) {\n        logger.debug('Unable to record analytics event - no InAppMessage was received');\n        return;\n    }\n    if (Amplify.Analytics && typeof Amplify.Analytics.record === 'function') {\n        var id = message.id, metadata = message.metadata;\n        Amplify.Analytics.record({\n            name: event,\n            attributes: {\n                campaign_id: id,\n                delivery_type: DELIVERY_TYPE,\n                treatment_id: metadata === null || metadata === void 0 ? void 0 : metadata.treatmentId,\n            },\n        });\n    }\n    else {\n        logger.debug('Analytics module is not registered into Amplify');\n    }\n};\nexport var getStartOfDay = function () {\n    var now = new Date();\n    now.setHours(0, 0, 0, 0);\n    return now.toISOString();\n};\nexport var matchesEventType = function (_a, _b) {\n    var CampaignId = _a.CampaignId, Schedule = _a.Schedule;\n    var eventType = _b.name;\n    var _c;\n    var EventType = ((_c = Schedule === null || Schedule === void 0 ? void 0 : Schedule.EventFilter) === null || _c === void 0 ? void 0 : _c.Dimensions).EventType;\n    var memoKey = CampaignId + \":\" + eventType;\n    if (!eventNameMemo.hasOwnProperty(memoKey)) {\n        eventNameMemo[memoKey] = !!(EventType === null || EventType === void 0 ? void 0 : EventType.Values.includes(eventType));\n    }\n    return eventNameMemo[memoKey];\n};\nexport var matchesAttributes = function (_a, _b) {\n    var CampaignId = _a.CampaignId, Schedule = _a.Schedule;\n    var attributes = _b.attributes;\n    var _c;\n    var Attributes = ((_c = Schedule === null || Schedule === void 0 ? void 0 : Schedule.EventFilter) === null || _c === void 0 ? void 0 : _c.Dimensions).Attributes;\n    if (isEmpty(Attributes)) {\n        // if message does not have attributes defined it does not matter what attributes are on the event\n        return true;\n    }\n    if (isEmpty(attributes)) {\n        // if message does have attributes but the event does not then it always fails the check\n        return false;\n    }\n    var memoKey = CampaignId + \":\" + JSON.stringify(attributes);\n    if (!eventAttributesMemo.hasOwnProperty(memoKey)) {\n        eventAttributesMemo[memoKey] = Object.entries(Attributes).every(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], Values = _b[1].Values;\n            return Values.includes(attributes[key]);\n        });\n    }\n    return eventAttributesMemo[memoKey];\n};\nexport var matchesMetrics = function (_a, _b) {\n    var CampaignId = _a.CampaignId, Schedule = _a.Schedule;\n    var metrics = _b.metrics;\n    var _c;\n    var Metrics = ((_c = Schedule === null || Schedule === void 0 ? void 0 : Schedule.EventFilter) === null || _c === void 0 ? void 0 : _c.Dimensions).Metrics;\n    if (isEmpty(Metrics)) {\n        // if message does not have metrics defined it does not matter what metrics are on the event\n        return true;\n    }\n    if (isEmpty(metrics)) {\n        // if message does have metrics but the event does not then it always fails the check\n        return false;\n    }\n    var memoKey = CampaignId + \":\" + JSON.stringify(metrics);\n    if (!eventMetricsMemo.hasOwnProperty(memoKey)) {\n        eventMetricsMemo[memoKey] = Object.entries(Metrics).every(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], _c = _b[1], ComparisonOperator = _c.ComparisonOperator, Value = _c.Value;\n            var compare = getComparator(ComparisonOperator);\n            // if there is some unknown comparison operator, treat as a comparison failure\n            return compare ? compare(Value, metrics[key]) : false;\n        });\n    }\n    return eventMetricsMemo[memoKey];\n};\nexport var getComparator = function (operator) {\n    switch (operator) {\n        case 'EQUAL':\n            return function (metricsVal, eventVal) { return metricsVal === eventVal; };\n        case 'GREATER_THAN':\n            return function (metricsVal, eventVal) { return metricsVal < eventVal; };\n        case 'GREATER_THAN_OR_EQUAL':\n            return function (metricsVal, eventVal) { return metricsVal <= eventVal; };\n        case 'LESS_THAN':\n            return function (metricsVal, eventVal) { return metricsVal > eventVal; };\n        case 'LESS_THAN_OR_EQUAL':\n            return function (metricsVal, eventVal) { return metricsVal >= eventVal; };\n        default:\n            return null;\n    }\n};\nexport var isBeforeEndDate = function (_a) {\n    var Schedule = _a.Schedule;\n    if (!(Schedule === null || Schedule === void 0 ? void 0 : Schedule.EndDate)) {\n        return true;\n    }\n    return new Date() < new Date(Schedule.EndDate);\n};\nexport var isQuietTime = function (message) {\n    var Schedule = message.Schedule;\n    if (!(Schedule === null || Schedule === void 0 ? void 0 : Schedule.QuietTime)) {\n        return false;\n    }\n    var pattern = /^[0-2]\\d:[0-5]\\d$/; // basic sanity check, not a fully featured HH:MM validation\n    var _a = Schedule.QuietTime, Start = _a.Start, End = _a.End;\n    if (!Start ||\n        !End ||\n        Start === End ||\n        !pattern.test(Start) ||\n        !pattern.test(End)) {\n        return false;\n    }\n    var now = new Date();\n    var start = new Date(now);\n    var end = new Date(now);\n    var _b = __read(Start.split(':'), 2), startHours = _b[0], startMinutes = _b[1];\n    var _c = __read(End.split(':'), 2), endHours = _c[0], endMinutes = _c[1];\n    start.setHours(Number.parseInt(startHours, 10), Number.parseInt(startMinutes, 10), 0, 0);\n    end.setHours(Number.parseInt(endHours, 10), Number.parseInt(endMinutes, 10), 0, 0);\n    // if quiet time includes midnight, bump the end time to the next day\n    if (start > end) {\n        end.setDate(end.getDate() + 1);\n    }\n    var isQuietTime = now >= start && now <= end;\n    if (isQuietTime) {\n        logger.debug('message filtered due to quiet time', message);\n    }\n    return isQuietTime;\n};\nexport var clearMemo = function () {\n    eventNameMemo = {};\n    eventAttributesMemo = {};\n    eventMetricsMemo = {};\n};\n// in the pinpoint console when a message is created with a Modal or Full Screen layout,\n// it is assigned a layout value of MOBILE_FEED or OVERLAYS respectively in the message payload.\n// In the future, Pinpoint will be updating the layout values in the aforementioned scenario\n// to MODAL and FULL_SCREEN.\n//\n// This utility acts as a safeguard to ensure that:\n// - 1. the usage of MOBILE_FEED and OVERLAYS as values for message layouts are not leaked\n//      outside the Pinpoint provider\n// - 2. Amplify correctly handles the legacy layout values from Pinpoint after they are updated\nexport var interpretLayout = function (layout) {\n    if (layout === PinpointInAppMessageLayout.MOBILE_FEED) {\n        return 'MODAL';\n    }\n    if (layout === PinpointInAppMessageLayout.OVERLAYS) {\n        return 'FULL_SCREEN';\n    }\n    // cast as PinpointInAppMessage['InAppMessage']['Layout'] allows `string` as a value\n    return layout;\n};\nexport var extractContent = function (_a) {\n    var message = _a.InAppMessage;\n    var _b, _c;\n    return ((_c = (_b = message === null || message === void 0 ? void 0 : message.Content) === null || _b === void 0 ? void 0 : _b.map(function (content) {\n        var BackgroundColor = content.BackgroundColor, BodyConfig = content.BodyConfig, HeaderConfig = content.HeaderConfig, ImageUrl = content.ImageUrl, PrimaryBtn = content.PrimaryBtn, SecondaryBtn = content.SecondaryBtn;\n        var defaultPrimaryButton = PrimaryBtn === null || PrimaryBtn === void 0 ? void 0 : PrimaryBtn.DefaultConfig;\n        var defaultSecondaryButton = SecondaryBtn === null || SecondaryBtn === void 0 ? void 0 : SecondaryBtn.DefaultConfig;\n        var extractedContent = {};\n        if (BackgroundColor) {\n            extractedContent.container = {\n                style: {\n                    backgroundColor: BackgroundColor,\n                },\n            };\n        }\n        if (HeaderConfig) {\n            extractedContent.header = {\n                content: HeaderConfig.Header,\n                style: {\n                    color: HeaderConfig.TextColor,\n                    textAlign: HeaderConfig.Alignment.toLowerCase(),\n                },\n            };\n        }\n        if (BodyConfig) {\n            extractedContent.body = {\n                content: BodyConfig.Body,\n                style: {\n                    color: BodyConfig.TextColor,\n                    textAlign: BodyConfig.Alignment.toLowerCase(),\n                },\n            };\n        }\n        if (ImageUrl) {\n            extractedContent.image = {\n                src: ImageUrl,\n            };\n        }\n        if (defaultPrimaryButton) {\n            extractedContent.primaryButton = {\n                title: defaultPrimaryButton.Text,\n                action: defaultPrimaryButton.ButtonAction,\n                url: defaultPrimaryButton.Link,\n                style: {\n                    backgroundColor: defaultPrimaryButton.BackgroundColor,\n                    borderRadius: defaultPrimaryButton.BorderRadius,\n                    color: defaultPrimaryButton.TextColor,\n                },\n            };\n        }\n        if (defaultSecondaryButton) {\n            extractedContent.secondaryButton = {\n                title: defaultSecondaryButton.Text,\n                action: defaultSecondaryButton.ButtonAction,\n                url: defaultSecondaryButton.Link,\n                style: {\n                    backgroundColor: defaultSecondaryButton.BackgroundColor,\n                    borderRadius: defaultSecondaryButton.BorderRadius,\n                    color: defaultSecondaryButton.TextColor,\n                },\n            };\n        }\n        return extractedContent;\n    })) !== null && _c !== void 0 ? _c : []);\n};\nexport var extractMetadata = function (_a) {\n    var InAppMessage = _a.InAppMessage, Priority = _a.Priority, Schedule = _a.Schedule, TreatmentId = _a.TreatmentId;\n    return ({\n        customData: InAppMessage === null || InAppMessage === void 0 ? void 0 : InAppMessage.CustomConfig,\n        endDate: Schedule === null || Schedule === void 0 ? void 0 : Schedule.EndDate,\n        priority: Priority,\n        treatmentId: TreatmentId,\n    });\n};\n//# sourceMappingURL=utils.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}