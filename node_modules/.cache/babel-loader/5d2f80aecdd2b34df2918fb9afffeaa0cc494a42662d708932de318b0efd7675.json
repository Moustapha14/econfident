{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __read, __values } from \"tslib\";\nimport { HttpResponse } from '@aws-sdk/protocol-http';\nimport { buildQueryString } from '@aws-sdk/querystring-builder';\nimport axios from 'axios';\nimport { ConsoleLogger as Logger, Platform } from '@aws-amplify/core';\nimport { AWSS3ProviderUploadErrorStrings } from '../common/StorageErrorStrings';\nvar logger = new Logger('axios-http-handler');\nexport var SEND_UPLOAD_PROGRESS_EVENT = 'sendUploadProgress';\nexport var SEND_DOWNLOAD_PROGRESS_EVENT = 'sendDownloadProgress';\nfunction isBlob(body) {\n  return typeof Blob !== 'undefined' && body instanceof Blob;\n}\nfunction hasErrorResponse(error) {\n  return typeof error !== 'undefined' && Object.prototype.hasOwnProperty.call(error, 'response') && typeof error.response !== 'undefined' && Object.prototype.hasOwnProperty.call(error.response, 'status') && typeof error.response.status === 'number';\n}\nvar normalizeHeaders = function (headers, normalizedName) {\n  var e_1, _a;\n  try {\n    for (var _b = __values(Object.entries(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n      var _d = __read(_c.value, 2),\n        k = _d[0],\n        v = _d[1];\n      if (k !== normalizedName && k.toUpperCase() === normalizedName.toUpperCase()) {\n        headers[normalizedName] = v;\n        delete headers[k];\n      }\n    }\n  } catch (e_1_1) {\n    e_1 = {\n      error: e_1_1\n    };\n  } finally {\n    try {\n      if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n    } finally {\n      if (e_1) throw e_1.error;\n    }\n  }\n};\nexport var reactNativeRequestTransformer = [function (data, headers) {\n  if (isBlob(data)) {\n    normalizeHeaders(headers, 'Content-Type');\n    normalizeHeaders(headers, 'Accept');\n    return data;\n  }\n  // Axios' default transformRequest is an array\n  return axios.defaults.transformRequest[0].call(null, data, headers);\n}];\nvar AxiosHttpHandler = /** @class */function () {\n  function AxiosHttpHandler(httpOptions, emitter, cancelTokenSource) {\n    if (httpOptions === void 0) {\n      httpOptions = {};\n    }\n    this.httpOptions = httpOptions;\n    this.emitter = emitter;\n    this.cancelTokenSource = cancelTokenSource;\n  }\n  AxiosHttpHandler.prototype.destroy = function () {\n    // Do nothing. TLS and HTTP/2 connection pooling is handled by the\n    // browser.\n  };\n  AxiosHttpHandler.prototype.handle = function (request, options) {\n    var requestTimeoutInMs = this.httpOptions.requestTimeout;\n    // prioritize the call specific event emitter, this is useful for multipart upload as each individual parts has\n    // their own event emitter, without having to create s3client for every individual calls.\n    var emitter = options.emitter || this.emitter;\n    var path = request.path;\n    if (request.query) {\n      var queryString = buildQueryString(request.query);\n      if (queryString) {\n        path += \"?\" + queryString;\n      }\n    }\n    var port = request.port;\n    var url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : '') + path;\n    var axiosRequest = {};\n    axiosRequest.url = url;\n    axiosRequest.method = request.method;\n    axiosRequest.headers = request.headers;\n    // The host header is automatically added by the browser and adding it explicitly in the\n    // axios request throws an error https://github.com/aws-amplify/amplify-js/issues/5376\n    // This is because the host header is a forbidden header for the http client to set\n    // see https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name and\n    // https://fetch.spec.whatwg.org/#forbidden-header-name\n    // The reason we are removing this header here instead of in the aws-sdk's client\n    // middleware is that the host header is required to be in the request signature and if\n    // we remove it from the middlewares, then the request fails because the header is added\n    // by the browser but is absent from the signature.\n    delete axiosRequest.headers['host'];\n    if (request.body) {\n      axiosRequest.data = request.body;\n    } else {\n      // Fix for https://github.com/aws-amplify/amplify-js/issues/5432\n      // If the POST request body is empty but content-type header is set, axios is forcibly removing it\n      // See https://github.com/axios/axios/issues/1535 and refusing to fix it https://github.com/axios/axios/issues/755\n      // This change is a workaround to set the data as null (instead of undefined) to prevent axios from\n      // removing the content-type header. Link for the source code\n      // https://github.com/axios/axios/blob/dc4bc49673943e35280e5df831f5c3d0347a9393/lib/adapters/xhr.js#L121-L123\n      if (axiosRequest.headers[Object.keys(axiosRequest.headers).find(function (key) {\n        return key.toLowerCase() === 'content-type';\n      })]) {\n        axiosRequest.data = null;\n      }\n    }\n    if (emitter) {\n      // TODO: Unify linting rules across JS repo\n      axiosRequest.onUploadProgress = function (event) {\n        emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, event);\n        logger.debug(event);\n      };\n      // TODO: Unify linting rules across JS repo\n      axiosRequest.onDownloadProgress = function (event) {\n        emitter.emit(SEND_DOWNLOAD_PROGRESS_EVENT, event);\n        logger.debug(event);\n      };\n    }\n    // If a cancel token source is passed down from the provider, allows cancellation of in-flight requests\n    if (this.cancelTokenSource) {\n      axiosRequest.cancelToken = this.cancelTokenSource.token;\n    }\n    if (options.cancelTokenSource) {\n      axiosRequest.cancelToken = options.cancelTokenSource.token;\n    }\n    // From gamma release, aws-sdk now expects all response type to be of blob or streams\n    axiosRequest.responseType = 'blob';\n    // In Axios, Blobs are identified by calling Object.prototype.toString on the object. However, on React Native,\n    // calling Object.prototype.toString on a Blob returns '[object Object]' instead of '[object Blob]', which causes\n    // Axios to treat Blobs as generic Javascript objects. Therefore we need a to use a custom request transformer\n    // to correctly handle Blob in React Native.\n    if (Platform.isReactNative) {\n      axiosRequest.transformRequest = reactNativeRequestTransformer;\n    }\n    var raceOfPromises = [axios.request(axiosRequest).then(function (response) {\n      return {\n        response: new HttpResponse({\n          headers: response.headers,\n          statusCode: response.status,\n          body: response.data\n        })\n      };\n    }).catch(function (error) {\n      var _a, _b;\n      // Error\n      if (error.message !== AWSS3ProviderUploadErrorStrings.UPLOAD_PAUSED_MESSAGE) {\n        logger.error(error.message);\n      }\n      // for axios' cancel error, we should re-throw it back so it's not considered an s3client error\n      // if we return empty, or an abitrary error HttpResponse, it will be hard to debug down the line.\n      //\n      // for errors that does not have a 'response' object, it's very likely that it is an unexpected error for\n      // example a disconnect. Without it we cannot meaningfully reconstruct a HttpResponse, and the AWS SDK might\n      // consider the request successful by mistake. In this case we should also re-throw the error.\n      if (axios.isCancel(error) || !hasErrorResponse(error)) {\n        throw error;\n      }\n      // otherwise, we should re-construct an HttpResponse from the error, so that it can be passed down to other\n      // aws sdk middleware (e.g retry, clock skew correction, error message serializing)\n      return {\n        response: new HttpResponse({\n          statusCode: error.response.status,\n          body: (_a = error.response) === null || _a === void 0 ? void 0 : _a.data,\n          headers: (_b = error.response) === null || _b === void 0 ? void 0 : _b.headers\n        })\n      };\n    }), requestTimeout(requestTimeoutInMs)];\n    return Promise.race(raceOfPromises);\n  };\n  return AxiosHttpHandler;\n}();\nexport { AxiosHttpHandler };\nfunction requestTimeout(timeoutInMs) {\n  if (timeoutInMs === void 0) {\n    timeoutInMs = 0;\n  }\n  return new Promise(function (resolve, reject) {\n    if (timeoutInMs) {\n      setTimeout(function () {\n        var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n        timeoutError.name = 'TimeoutError';\n        reject(timeoutError);\n      }, timeoutInMs);\n    }\n  });\n}","map":{"version":3,"names":["__read","__values","HttpResponse","buildQueryString","axios","ConsoleLogger","Logger","Platform","AWSS3ProviderUploadErrorStrings","logger","SEND_UPLOAD_PROGRESS_EVENT","SEND_DOWNLOAD_PROGRESS_EVENT","isBlob","body","Blob","hasErrorResponse","error","Object","prototype","hasOwnProperty","call","response","status","normalizeHeaders","headers","normalizedName","e_1","_a","_b","entries","_c","next","done","_d","value","k","v","toUpperCase","e_1_1","return","reactNativeRequestTransformer","data","defaults","transformRequest","AxiosHttpHandler","httpOptions","emitter","cancelTokenSource","destroy","handle","request","options","requestTimeoutInMs","requestTimeout","path","query","queryString","port","url","protocol","hostname","axiosRequest","method","keys","find","key","toLowerCase","onUploadProgress","event","emit","debug","onDownloadProgress","cancelToken","token","responseType","isReactNative","raceOfPromises","then","statusCode","catch","message","UPLOAD_PAUSED_MESSAGE","isCancel","Promise","race","timeoutInMs","resolve","reject","setTimeout","timeoutError","Error","name"],"sources":["/Users/macbook/Documents/Chatapp/temp-repo-chatbot/frontend/node_modules/@aws-amplify/storage/lib-esm/providers/axios-http-handler.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __read, __values } from \"tslib\";\nimport { HttpResponse } from '@aws-sdk/protocol-http';\nimport { buildQueryString } from '@aws-sdk/querystring-builder';\nimport axios from 'axios';\nimport { ConsoleLogger as Logger, Platform } from '@aws-amplify/core';\nimport { AWSS3ProviderUploadErrorStrings } from '../common/StorageErrorStrings';\nvar logger = new Logger('axios-http-handler');\nexport var SEND_UPLOAD_PROGRESS_EVENT = 'sendUploadProgress';\nexport var SEND_DOWNLOAD_PROGRESS_EVENT = 'sendDownloadProgress';\nfunction isBlob(body) {\n    return typeof Blob !== 'undefined' && body instanceof Blob;\n}\nfunction hasErrorResponse(error) {\n    return (typeof error !== 'undefined' &&\n        Object.prototype.hasOwnProperty.call(error, 'response') &&\n        typeof error.response !== 'undefined' &&\n        Object.prototype.hasOwnProperty.call(error.response, 'status') &&\n        typeof error.response.status === 'number');\n}\nvar normalizeHeaders = function (headers, normalizedName) {\n    var e_1, _a;\n    try {\n        for (var _b = __values(Object.entries(headers)), _c = _b.next(); !_c.done; _c = _b.next()) {\n            var _d = __read(_c.value, 2), k = _d[0], v = _d[1];\n            if (k !== normalizedName &&\n                k.toUpperCase() === normalizedName.toUpperCase()) {\n                headers[normalizedName] = v;\n                delete headers[k];\n            }\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n};\nexport var reactNativeRequestTransformer = [\n    function (data, headers) {\n        if (isBlob(data)) {\n            normalizeHeaders(headers, 'Content-Type');\n            normalizeHeaders(headers, 'Accept');\n            return data;\n        }\n        // Axios' default transformRequest is an array\n        return axios.defaults.transformRequest[0].call(null, data, headers);\n    },\n];\nvar AxiosHttpHandler = /** @class */ (function () {\n    function AxiosHttpHandler(httpOptions, emitter, cancelTokenSource) {\n        if (httpOptions === void 0) { httpOptions = {}; }\n        this.httpOptions = httpOptions;\n        this.emitter = emitter;\n        this.cancelTokenSource = cancelTokenSource;\n    }\n    AxiosHttpHandler.prototype.destroy = function () {\n        // Do nothing. TLS and HTTP/2 connection pooling is handled by the\n        // browser.\n    };\n    AxiosHttpHandler.prototype.handle = function (request, options) {\n        var requestTimeoutInMs = this.httpOptions.requestTimeout;\n        // prioritize the call specific event emitter, this is useful for multipart upload as each individual parts has\n        // their own event emitter, without having to create s3client for every individual calls.\n        var emitter = options.emitter || this.emitter;\n        var path = request.path;\n        if (request.query) {\n            var queryString = buildQueryString(request.query);\n            if (queryString) {\n                path += \"?\" + queryString;\n            }\n        }\n        var port = request.port;\n        var url = request.protocol + \"//\" + request.hostname + (port ? \":\" + port : '') + path;\n        var axiosRequest = {};\n        axiosRequest.url = url;\n        axiosRequest.method = request.method;\n        axiosRequest.headers = request.headers;\n        // The host header is automatically added by the browser and adding it explicitly in the\n        // axios request throws an error https://github.com/aws-amplify/amplify-js/issues/5376\n        // This is because the host header is a forbidden header for the http client to set\n        // see https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name and\n        // https://fetch.spec.whatwg.org/#forbidden-header-name\n        // The reason we are removing this header here instead of in the aws-sdk's client\n        // middleware is that the host header is required to be in the request signature and if\n        // we remove it from the middlewares, then the request fails because the header is added\n        // by the browser but is absent from the signature.\n        delete axiosRequest.headers['host'];\n        if (request.body) {\n            axiosRequest.data = request.body;\n        }\n        else {\n            // Fix for https://github.com/aws-amplify/amplify-js/issues/5432\n            // If the POST request body is empty but content-type header is set, axios is forcibly removing it\n            // See https://github.com/axios/axios/issues/1535 and refusing to fix it https://github.com/axios/axios/issues/755\n            // This change is a workaround to set the data as null (instead of undefined) to prevent axios from\n            // removing the content-type header. Link for the source code\n            // https://github.com/axios/axios/blob/dc4bc49673943e35280e5df831f5c3d0347a9393/lib/adapters/xhr.js#L121-L123\n            if (axiosRequest.headers[Object.keys(axiosRequest.headers).find(function (key) { return key.toLowerCase() === 'content-type'; })]) {\n                axiosRequest.data = null;\n            }\n        }\n        if (emitter) {\n            // TODO: Unify linting rules across JS repo\n            axiosRequest.onUploadProgress = function (event) {\n                emitter.emit(SEND_UPLOAD_PROGRESS_EVENT, event);\n                logger.debug(event);\n            };\n            // TODO: Unify linting rules across JS repo\n            axiosRequest.onDownloadProgress = function (event) {\n                emitter.emit(SEND_DOWNLOAD_PROGRESS_EVENT, event);\n                logger.debug(event);\n            };\n        }\n        // If a cancel token source is passed down from the provider, allows cancellation of in-flight requests\n        if (this.cancelTokenSource) {\n            axiosRequest.cancelToken = this.cancelTokenSource.token;\n        }\n        if (options.cancelTokenSource) {\n            axiosRequest.cancelToken = options.cancelTokenSource.token;\n        }\n        // From gamma release, aws-sdk now expects all response type to be of blob or streams\n        axiosRequest.responseType = 'blob';\n        // In Axios, Blobs are identified by calling Object.prototype.toString on the object. However, on React Native,\n        // calling Object.prototype.toString on a Blob returns '[object Object]' instead of '[object Blob]', which causes\n        // Axios to treat Blobs as generic Javascript objects. Therefore we need a to use a custom request transformer\n        // to correctly handle Blob in React Native.\n        if (Platform.isReactNative) {\n            axiosRequest.transformRequest = reactNativeRequestTransformer;\n        }\n        var raceOfPromises = [\n            axios\n                .request(axiosRequest)\n                .then(function (response) {\n                return {\n                    response: new HttpResponse({\n                        headers: response.headers,\n                        statusCode: response.status,\n                        body: response.data,\n                    }),\n                };\n            })\n                .catch(function (error) {\n                var _a, _b;\n                // Error\n                if (error.message !==\n                    AWSS3ProviderUploadErrorStrings.UPLOAD_PAUSED_MESSAGE) {\n                    logger.error(error.message);\n                }\n                // for axios' cancel error, we should re-throw it back so it's not considered an s3client error\n                // if we return empty, or an abitrary error HttpResponse, it will be hard to debug down the line.\n                //\n                // for errors that does not have a 'response' object, it's very likely that it is an unexpected error for\n                // example a disconnect. Without it we cannot meaningfully reconstruct a HttpResponse, and the AWS SDK might\n                // consider the request successful by mistake. In this case we should also re-throw the error.\n                if (axios.isCancel(error) || !hasErrorResponse(error)) {\n                    throw error;\n                }\n                // otherwise, we should re-construct an HttpResponse from the error, so that it can be passed down to other\n                // aws sdk middleware (e.g retry, clock skew correction, error message serializing)\n                return {\n                    response: new HttpResponse({\n                        statusCode: error.response.status,\n                        body: (_a = error.response) === null || _a === void 0 ? void 0 : _a.data,\n                        headers: (_b = error.response) === null || _b === void 0 ? void 0 : _b.headers,\n                    }),\n                };\n            }),\n            requestTimeout(requestTimeoutInMs),\n        ];\n        return Promise.race(raceOfPromises);\n    };\n    return AxiosHttpHandler;\n}());\nexport { AxiosHttpHandler };\nfunction requestTimeout(timeoutInMs) {\n    if (timeoutInMs === void 0) { timeoutInMs = 0; }\n    return new Promise(function (resolve, reject) {\n        if (timeoutInMs) {\n            setTimeout(function () {\n                var timeoutError = new Error(\"Request did not complete within \" + timeoutInMs + \" ms\");\n                timeoutError.name = 'TimeoutError';\n                reject(timeoutError);\n            }, timeoutInMs);\n        }\n    });\n}\n//# sourceMappingURL=axios-http-handler.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}