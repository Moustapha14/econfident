{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __extends } from \"tslib\";\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\nvar logger = new Logger('AuthError');\nvar AuthError = /** @class */function (_super) {\n  __extends(AuthError, _super);\n  function AuthError(type) {\n    var _this = this;\n    var _a = authErrorMessages[type],\n      message = _a.message,\n      log = _a.log;\n    _this = _super.call(this, message) || this;\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    _this.constructor = AuthError;\n    Object.setPrototypeOf(_this, AuthError.prototype);\n    _this.name = 'AuthError';\n    _this.log = log || message;\n    logger.error(_this.log);\n    return _this;\n  }\n  return AuthError;\n}(Error);\nexport { AuthError };\nvar NoUserPoolError = /** @class */function (_super) {\n  __extends(NoUserPoolError, _super);\n  function NoUserPoolError(type) {\n    var _this = _super.call(this, type) || this;\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    _this.constructor = NoUserPoolError;\n    Object.setPrototypeOf(_this, NoUserPoolError.prototype);\n    _this.name = 'NoUserPoolError';\n    return _this;\n  }\n  return NoUserPoolError;\n}(AuthError);\nexport { NoUserPoolError };\nexport var authErrorMessages = {\n  noConfig: {\n    message: AuthErrorStrings.DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\\n            \\n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\\n\\t\\t\\t\\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\\n        \"\n  },\n  missingAuthConfig: {\n    message: AuthErrorStrings.DEFAULT_MSG,\n    log: \"\\n            Error: Amplify has not been configured correctly. \\n            The configuration object is missing required auth properties.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Did you run `amplify push` after adding auth via `amplify add auth`?\\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\\n\\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\\n        \"\n  },\n  emptyUsername: {\n    message: AuthErrorStrings.EMPTY_USERNAME\n  },\n  // TODO: should include a list of valid sign-in types\n  invalidUsername: {\n    message: AuthErrorStrings.INVALID_USERNAME\n  },\n  emptyPassword: {\n    message: AuthErrorStrings.EMPTY_PASSWORD\n  },\n  emptyCode: {\n    message: AuthErrorStrings.EMPTY_CODE\n  },\n  signUpError: {\n    message: AuthErrorStrings.SIGN_UP_ERROR,\n    log: 'The first parameter should either be non-null string or object'\n  },\n  noMFA: {\n    message: AuthErrorStrings.NO_MFA\n  },\n  invalidMFA: {\n    message: AuthErrorStrings.INVALID_MFA\n  },\n  emptyChallengeResponse: {\n    message: AuthErrorStrings.EMPTY_CHALLENGE\n  },\n  noUserSession: {\n    message: AuthErrorStrings.NO_USER_SESSION\n  },\n  deviceConfig: {\n    message: AuthErrorStrings.DEVICE_CONFIG\n  },\n  networkError: {\n    message: AuthErrorStrings.NETWORK_ERROR\n  },\n  autoSignInError: {\n    message: AuthErrorStrings.AUTOSIGNIN_ERROR\n  },\n  default: {\n    message: AuthErrorStrings.DEFAULT_MSG\n  }\n};","map":{"version":3,"names":["__extends","ConsoleLogger","Logger","AuthErrorStrings","logger","AuthError","_super","type","_this","_a","authErrorMessages","message","log","call","constructor","Object","setPrototypeOf","prototype","name","error","Error","NoUserPoolError","noConfig","DEFAULT_MSG","missingAuthConfig","emptyUsername","EMPTY_USERNAME","invalidUsername","INVALID_USERNAME","emptyPassword","EMPTY_PASSWORD","emptyCode","EMPTY_CODE","signUpError","SIGN_UP_ERROR","noMFA","NO_MFA","invalidMFA","INVALID_MFA","emptyChallengeResponse","EMPTY_CHALLENGE","noUserSession","NO_USER_SESSION","deviceConfig","DEVICE_CONFIG","networkError","NETWORK_ERROR","autoSignInError","AUTOSIGNIN_ERROR","default"],"sources":["/Users/macbook/Documents/Chatapp/temp-repo-chatbot/frontend/node_modules/@aws-amplify/auth/lib-esm/Errors.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __extends } from \"tslib\";\nimport { ConsoleLogger as Logger } from '@aws-amplify/core';\nimport { AuthErrorStrings } from './common/AuthErrorStrings';\nvar logger = new Logger('AuthError');\nvar AuthError = /** @class */ (function (_super) {\n    __extends(AuthError, _super);\n    function AuthError(type) {\n        var _this = this;\n        var _a = authErrorMessages[type], message = _a.message, log = _a.log;\n        _this = _super.call(this, message) || this;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        _this.constructor = AuthError;\n        Object.setPrototypeOf(_this, AuthError.prototype);\n        _this.name = 'AuthError';\n        _this.log = log || message;\n        logger.error(_this.log);\n        return _this;\n    }\n    return AuthError;\n}(Error));\nexport { AuthError };\nvar NoUserPoolError = /** @class */ (function (_super) {\n    __extends(NoUserPoolError, _super);\n    function NoUserPoolError(type) {\n        var _this = _super.call(this, type) || this;\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        _this.constructor = NoUserPoolError;\n        Object.setPrototypeOf(_this, NoUserPoolError.prototype);\n        _this.name = 'NoUserPoolError';\n        return _this;\n    }\n    return NoUserPoolError;\n}(AuthError));\nexport { NoUserPoolError };\nexport var authErrorMessages = {\n    noConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: \"\\n            Error: Amplify has not been configured correctly.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Make sure you're passing the awsconfig object to Amplify.configure() in your app's entry point\\n                See https://aws-amplify.github.io/docs/js/authentication#configure-your-app for more information\\n            \\n            2. There might be multiple conflicting versions of amplify packages in your node_modules.\\n\\t\\t\\t\\tRefer to our docs site for help upgrading Amplify packages (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js)\\n        \",\n    },\n    missingAuthConfig: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n        log: \"\\n            Error: Amplify has not been configured correctly. \\n            The configuration object is missing required auth properties.\\n            This error is typically caused by one of the following scenarios:\\n\\n            1. Did you run `amplify push` after adding auth via `amplify add auth`?\\n                See https://aws-amplify.github.io/docs/js/authentication#amplify-project-setup for more information\\n\\n            2. This could also be caused by multiple conflicting versions of amplify packages, see (https://docs.amplify.aws/lib/troubleshooting/upgrading/q/platform/js) for help upgrading Amplify packages.\\n        \",\n    },\n    emptyUsername: {\n        message: AuthErrorStrings.EMPTY_USERNAME,\n    },\n    // TODO: should include a list of valid sign-in types\n    invalidUsername: {\n        message: AuthErrorStrings.INVALID_USERNAME,\n    },\n    emptyPassword: {\n        message: AuthErrorStrings.EMPTY_PASSWORD,\n    },\n    emptyCode: {\n        message: AuthErrorStrings.EMPTY_CODE,\n    },\n    signUpError: {\n        message: AuthErrorStrings.SIGN_UP_ERROR,\n        log: 'The first parameter should either be non-null string or object',\n    },\n    noMFA: {\n        message: AuthErrorStrings.NO_MFA,\n    },\n    invalidMFA: {\n        message: AuthErrorStrings.INVALID_MFA,\n    },\n    emptyChallengeResponse: {\n        message: AuthErrorStrings.EMPTY_CHALLENGE,\n    },\n    noUserSession: {\n        message: AuthErrorStrings.NO_USER_SESSION,\n    },\n    deviceConfig: {\n        message: AuthErrorStrings.DEVICE_CONFIG,\n    },\n    networkError: {\n        message: AuthErrorStrings.NETWORK_ERROR,\n    },\n    autoSignInError: {\n        message: AuthErrorStrings.AUTOSIGNIN_ERROR,\n    },\n    default: {\n        message: AuthErrorStrings.DEFAULT_MSG,\n    },\n};\n//# sourceMappingURL=Errors.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}