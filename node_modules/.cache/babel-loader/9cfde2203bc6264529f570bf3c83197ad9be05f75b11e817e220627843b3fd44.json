{"ast":null,"code":"import { __assign, __awaiter, __generator } from \"tslib\";\nimport { Credentials, Logger, getAmplifyUserAgent } from '@aws-amplify/core';\nimport { S3Client } from '@aws-sdk/client-s3';\nimport { AxiosHttpHandler } from '../providers/axios-http-handler';\nimport { localTestingStorageEndpoint, SET_CONTENT_LENGTH_HEADER } from './StorageConstants';\nvar logger = new Logger('S3ClientUtils');\n// placeholder credentials in order to satisfy type requirement, always results in 403 when used\nvar INVALID_CRED = {\n  accessKeyId: '',\n  secretAccessKey: ''\n};\nexport var getPrefix = function (config) {\n  var credentials = config.credentials,\n    level = config.level,\n    customPrefix = config.customPrefix,\n    identityId = config.identityId;\n  var resolvedCustomPrefix = customPrefix || {};\n  var resolvedIdentityId = identityId || credentials.identityId;\n  var privatePath = (resolvedCustomPrefix.private !== undefined ? resolvedCustomPrefix.private : 'private/') + resolvedIdentityId + '/';\n  var protectedPath = (resolvedCustomPrefix.protected !== undefined ? resolvedCustomPrefix.protected : 'protected/') + resolvedIdentityId + '/';\n  var publicPath = resolvedCustomPrefix.public !== undefined ? resolvedCustomPrefix.public : 'public/';\n  switch (level) {\n    case 'private':\n      return privatePath;\n    case 'protected':\n      return protectedPath;\n    default:\n      return publicPath;\n  }\n};\nexport var createPrefixMiddleware = function (opt, key) {\n  return function (next, _context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var credentials, cred, prefix, clonedInput, result;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              return [4 /*yield*/, Credentials.get()];\n            case 1:\n              credentials = _a.sent();\n              cred = Credentials.shear(credentials);\n              prefix = getPrefix(__assign(__assign({}, opt), {\n                credentials: cred\n              }));\n              clonedInput = Object.assign({}, args.input);\n              if (Object.prototype.hasOwnProperty.call(args.input, 'Key')) {\n                clonedInput.Key = prefix + key;\n                args.input = clonedInput;\n              } else if (Object.prototype.hasOwnProperty.call(args.input, 'Prefix')) {\n                clonedInput.Prefix = prefix + key;\n                args.input = clonedInput;\n              }\n              result = next(args);\n              return [2 /*return*/, result];\n          }\n        });\n      });\n    };\n  };\n};\nvar isTimeSkewedError = function (err) {\n  return err.ServerTime && typeof err.Code === 'string' && err.Code === 'RequestTimeTooSkewed';\n};\n// we want to take the S3Client config in parameter so we can modify it's systemClockOffset\nexport var autoAdjustClockskewMiddleware = function (config) {\n  return function (next, _context) {\n    return function (args) {\n      return __awaiter(void 0, void 0, void 0, function () {\n        var err_1, serverDate;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n              return [4 /*yield*/, next(args)];\n            case 1:\n              return [2 /*return*/, _a.sent()];\n            case 2:\n              err_1 = _a.sent();\n              if (isTimeSkewedError(err_1)) {\n                serverDate = new Date(err_1.ServerTime);\n                config.systemClockOffset = serverDate.getTime() - Date.now();\n              }\n              throw err_1;\n            case 3:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n  };\n};\n\nexport var autoAdjustClockskewMiddlewareOptions = {\n  step: 'finalizeRequest',\n  name: 'autoAdjustClockskewMiddleware'\n};\nexport var prefixMiddlewareOptions = {\n  step: 'initialize',\n  name: 'addPrefixMiddleware'\n};\nexport var credentialsProvider = function () {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var credentials, cred, error_1;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          _a.trys.push([0, 2,, 3]);\n          return [4 /*yield*/, Credentials.get()];\n        case 1:\n          credentials = _a.sent();\n          if (!credentials) return [2 /*return*/, INVALID_CRED];\n          cred = Credentials.shear(credentials);\n          logger.debug('credentials provider get credentials', cred);\n          return [2 /*return*/, cred];\n        case 2:\n          error_1 = _a.sent();\n          logger.warn('credentials provider error', error_1);\n          return [2 /*return*/, INVALID_CRED];\n        case 3:\n          return [2 /*return*/];\n      }\n    });\n  });\n};\n\nexport var createS3Client = function (config, emitter) {\n  var region = config.region,\n    cancelTokenSource = config.cancelTokenSource,\n    dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting,\n    useAccelerateEndpoint = config.useAccelerateEndpoint;\n  var localTestingConfig = {};\n  if (dangerouslyConnectToHttpEndpointForTesting) {\n    localTestingConfig = {\n      endpoint: localTestingStorageEndpoint,\n      tls: false,\n      bucketEndpoint: false,\n      forcePathStyle: true\n    };\n  }\n  var s3client = new S3Client(__assign(__assign({\n    region: region,\n    // Using provider instead of a static credentials, so that if an upload task was in progress, but credentials gets\n    // changed or invalidated (e.g user signed out), the subsequent requests will fail.\n    credentials: credentialsProvider,\n    customUserAgent: getAmplifyUserAgent()\n  }, localTestingConfig), {\n    requestHandler: new AxiosHttpHandler({}, emitter, cancelTokenSource),\n    useAccelerateEndpoint: useAccelerateEndpoint\n  }));\n  s3client.middlewareStack.remove(SET_CONTENT_LENGTH_HEADER);\n  return s3client;\n};\nvar MB = 1024 * 1024;\nvar GB = 1024 * MB;\nvar TB = 1024 * GB;\nexport var DEFAULT_PART_SIZE = 5 * MB;\nexport var MAX_OBJECT_SIZE = 5 * TB;\nexport var MAX_PARTS_COUNT = 10000;\nexport var DEFAULT_QUEUE_SIZE = 4;\nexport var calculatePartSize = function (totalSize) {\n  var partSize = DEFAULT_PART_SIZE;\n  var partsCount = Math.ceil(totalSize / partSize);\n  while (partsCount > MAX_PARTS_COUNT) {\n    partSize *= 2;\n    partsCount = Math.ceil(totalSize / partSize);\n  }\n  return partSize;\n};","map":{"version":3,"names":["__assign","__awaiter","__generator","Credentials","Logger","getAmplifyUserAgent","S3Client","AxiosHttpHandler","localTestingStorageEndpoint","SET_CONTENT_LENGTH_HEADER","logger","INVALID_CRED","accessKeyId","secretAccessKey","getPrefix","config","credentials","level","customPrefix","identityId","resolvedCustomPrefix","resolvedIdentityId","privatePath","private","undefined","protectedPath","protected","publicPath","public","createPrefixMiddleware","opt","key","next","_context","args","cred","prefix","clonedInput","result","_a","label","get","sent","shear","Object","assign","input","prototype","hasOwnProperty","call","Key","Prefix","isTimeSkewedError","err","ServerTime","Code","autoAdjustClockskewMiddleware","err_1","serverDate","trys","push","Date","systemClockOffset","getTime","now","autoAdjustClockskewMiddlewareOptions","step","name","prefixMiddlewareOptions","credentialsProvider","error_1","debug","warn","createS3Client","emitter","region","cancelTokenSource","dangerouslyConnectToHttpEndpointForTesting","useAccelerateEndpoint","localTestingConfig","endpoint","tls","bucketEndpoint","forcePathStyle","s3client","customUserAgent","requestHandler","middlewareStack","remove","MB","GB","TB","DEFAULT_PART_SIZE","MAX_OBJECT_SIZE","MAX_PARTS_COUNT","DEFAULT_QUEUE_SIZE","calculatePartSize","totalSize","partSize","partsCount","Math","ceil"],"sources":["/Users/macbook/Documents/projet ipssi/temp-repo-chatbot/frontend/node_modules/@aws-amplify/storage/lib-esm/common/S3ClientUtils.js"],"sourcesContent":["import { __assign, __awaiter, __generator } from \"tslib\";\nimport { Credentials, Logger, getAmplifyUserAgent, } from '@aws-amplify/core';\nimport { S3Client } from '@aws-sdk/client-s3';\nimport { AxiosHttpHandler } from '../providers/axios-http-handler';\nimport { localTestingStorageEndpoint, SET_CONTENT_LENGTH_HEADER, } from './StorageConstants';\nvar logger = new Logger('S3ClientUtils');\n// placeholder credentials in order to satisfy type requirement, always results in 403 when used\nvar INVALID_CRED = { accessKeyId: '', secretAccessKey: '' };\nexport var getPrefix = function (config) {\n    var credentials = config.credentials, level = config.level, customPrefix = config.customPrefix, identityId = config.identityId;\n    var resolvedCustomPrefix = customPrefix || {};\n    var resolvedIdentityId = identityId || credentials.identityId;\n    var privatePath = (resolvedCustomPrefix.private !== undefined\n        ? resolvedCustomPrefix.private\n        : 'private/') +\n        resolvedIdentityId +\n        '/';\n    var protectedPath = (resolvedCustomPrefix.protected !== undefined\n        ? resolvedCustomPrefix.protected\n        : 'protected/') +\n        resolvedIdentityId +\n        '/';\n    var publicPath = resolvedCustomPrefix.public !== undefined\n        ? resolvedCustomPrefix.public\n        : 'public/';\n    switch (level) {\n        case 'private':\n            return privatePath;\n        case 'protected':\n            return protectedPath;\n        default:\n            return publicPath;\n    }\n};\nexport var createPrefixMiddleware = function (opt, key) {\n    return function (next, _context) {\n        return function (args) { return __awaiter(void 0, void 0, void 0, function () {\n            var credentials, cred, prefix, clonedInput, result;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0: return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        cred = Credentials.shear(credentials);\n                        prefix = getPrefix(__assign(__assign({}, opt), { credentials: cred }));\n                        clonedInput = Object.assign({}, args.input);\n                        if (Object.prototype.hasOwnProperty.call(args.input, 'Key')) {\n                            clonedInput.Key = prefix + key;\n                            args.input = clonedInput;\n                        }\n                        else if (Object.prototype.hasOwnProperty.call(args.input, 'Prefix')) {\n                            clonedInput.Prefix = prefix + key;\n                            args.input = clonedInput;\n                        }\n                        result = next(args);\n                        return [2 /*return*/, result];\n                }\n            });\n        }); };\n    };\n};\nvar isTimeSkewedError = function (err) {\n    return err.ServerTime &&\n        typeof err.Code === 'string' &&\n        err.Code === 'RequestTimeTooSkewed';\n};\n// we want to take the S3Client config in parameter so we can modify it's systemClockOffset\nexport var autoAdjustClockskewMiddleware = function (config) {\n    return function (next, _context) {\n        return function (args) { return __awaiter(void 0, void 0, void 0, function () {\n            var err_1, serverDate;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, next(args)];\n                    case 1: return [2 /*return*/, _a.sent()];\n                    case 2:\n                        err_1 = _a.sent();\n                        if (isTimeSkewedError(err_1)) {\n                            serverDate = new Date(err_1.ServerTime);\n                            config.systemClockOffset = serverDate.getTime() - Date.now();\n                        }\n                        throw err_1;\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n    };\n};\nexport var autoAdjustClockskewMiddlewareOptions = {\n    step: 'finalizeRequest',\n    name: 'autoAdjustClockskewMiddleware',\n};\nexport var prefixMiddlewareOptions = {\n    step: 'initialize',\n    name: 'addPrefixMiddleware',\n};\nexport var credentialsProvider = function () { return __awaiter(void 0, void 0, void 0, function () {\n    var credentials, cred, error_1;\n    return __generator(this, function (_a) {\n        switch (_a.label) {\n            case 0:\n                _a.trys.push([0, 2, , 3]);\n                return [4 /*yield*/, Credentials.get()];\n            case 1:\n                credentials = _a.sent();\n                if (!credentials)\n                    return [2 /*return*/, INVALID_CRED];\n                cred = Credentials.shear(credentials);\n                logger.debug('credentials provider get credentials', cred);\n                return [2 /*return*/, cred];\n            case 2:\n                error_1 = _a.sent();\n                logger.warn('credentials provider error', error_1);\n                return [2 /*return*/, INVALID_CRED];\n            case 3: return [2 /*return*/];\n        }\n    });\n}); };\nexport var createS3Client = function (config, emitter) {\n    var region = config.region, cancelTokenSource = config.cancelTokenSource, dangerouslyConnectToHttpEndpointForTesting = config.dangerouslyConnectToHttpEndpointForTesting, useAccelerateEndpoint = config.useAccelerateEndpoint;\n    var localTestingConfig = {};\n    if (dangerouslyConnectToHttpEndpointForTesting) {\n        localTestingConfig = {\n            endpoint: localTestingStorageEndpoint,\n            tls: false,\n            bucketEndpoint: false,\n            forcePathStyle: true,\n        };\n    }\n    var s3client = new S3Client(__assign(__assign({ region: region, \n        // Using provider instead of a static credentials, so that if an upload task was in progress, but credentials gets\n        // changed or invalidated (e.g user signed out), the subsequent requests will fail.\n        credentials: credentialsProvider, customUserAgent: getAmplifyUserAgent() }, localTestingConfig), { requestHandler: new AxiosHttpHandler({}, emitter, cancelTokenSource), useAccelerateEndpoint: useAccelerateEndpoint }));\n    s3client.middlewareStack.remove(SET_CONTENT_LENGTH_HEADER);\n    return s3client;\n};\nvar MB = 1024 * 1024;\nvar GB = 1024 * MB;\nvar TB = 1024 * GB;\nexport var DEFAULT_PART_SIZE = 5 * MB;\nexport var MAX_OBJECT_SIZE = 5 * TB;\nexport var MAX_PARTS_COUNT = 10000;\nexport var DEFAULT_QUEUE_SIZE = 4;\nexport var calculatePartSize = function (totalSize) {\n    var partSize = DEFAULT_PART_SIZE;\n    var partsCount = Math.ceil(totalSize / partSize);\n    while (partsCount > MAX_PARTS_COUNT) {\n        partSize *= 2;\n        partsCount = Math.ceil(totalSize / partSize);\n    }\n    return partSize;\n};\n//# sourceMappingURL=S3ClientUtils.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}