{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { ClientDevice, Credentials, getAmplifyUserAgent, StorageHelper, transferKeyToUpperCase } from '@aws-amplify/core';\nimport { Cache } from '@aws-amplify/cache';\nimport { ChannelType, GetInAppMessagesCommand, UpdateEndpointCommand, PinpointClient } from '@aws-sdk/client-pinpoint';\nimport { v4 as uuid } from 'uuid';\nimport { addMessageInteractionEventListener } from '../../eventListeners';\nimport SessionTracker from '../../SessionTracker';\nimport { InAppMessageInteractionEvent } from '../../types';\nimport { AWSPinpointMessageEvent } from './types';\nimport { clearMemo, dispatchInAppMessagingEvent, extractContent, extractMetadata, getStartOfDay, interpretLayout, isBeforeEndDate, logger, matchesAttributes, matchesEventType, matchesMetrics, recordAnalyticsEvent } from './utils';\nvar MESSAGE_DAILY_COUNT_KEY = 'pinpointProvider_inAppMessages_dailyCount';\nvar MESSAGE_TOTAL_COUNT_KEY = 'pinpointProvider_inAppMessages_totalCount';\nvar AWSPinpointProvider = /** @class */function () {\n  function AWSPinpointProvider() {\n    var _this = this;\n    var _a;\n    this.config = {};\n    this.configured = false;\n    this.endpointInitialized = false;\n    this.initialized = false;\n    this.configure = function (config) {\n      if (config === void 0) {\n        config = {};\n      }\n      _this.config = __assign(__assign({}, _this.config), config);\n      logger.debug('configure AWSPinpointProvider', _this.config);\n      // some configuration steps should not be re-run even if provider is re-configured for some reason\n      if (!_this.configured) {\n        _this.sessionTracker = new SessionTracker(_this.sessionStateChangeHandler);\n        _this.sessionTracker.start();\n        // wire up default Pinpoint message event handling\n        addMessageInteractionEventListener(function (message) {\n          _this.recordMessageEvent(message, AWSPinpointMessageEvent.MESSAGE_DISPLAYED);\n        }, InAppMessageInteractionEvent.MESSAGE_DISPLAYED);\n        addMessageInteractionEventListener(function (message) {\n          _this.recordMessageEvent(message, AWSPinpointMessageEvent.MESSAGE_DISMISSED);\n        }, InAppMessageInteractionEvent.MESSAGE_DISMISSED);\n        addMessageInteractionEventListener(function (message) {\n          _this.recordMessageEvent(message, AWSPinpointMessageEvent.MESSAGE_ACTION_TAKEN);\n        }, InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN);\n      }\n      _this.configured = true;\n      dispatchInAppMessagingEvent('pinpointProvider_configured', null);\n      return _this.config;\n    };\n    this.getInAppMessages = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, appId, endpointId, pinpointClient, input, command, response, messages, err_1;\n        return __generator(this, function (_b) {\n          switch (_b.label) {\n            case 0:\n              if (!!this.initialized) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.init()];\n            case 1:\n              _b.sent();\n              _b.label = 2;\n            case 2:\n              // There is no way to granuarly reconcile the filter memoization as the keys are composited from a message id and\n              // event properties thus opting to just clear them out when getting messages rather than leave potentially\n              // obsolete entries that will no longer serve any purpose.\n              clearMemo();\n              _b.label = 3;\n            case 3:\n              _b.trys.push([3, 6,, 7]);\n              return [4 /*yield*/, this.updateEndpoint()];\n            case 4:\n              _b.sent();\n              _a = this.config, appId = _a.appId, endpointId = _a.endpointId, pinpointClient = _a.pinpointClient;\n              input = {\n                ApplicationId: appId,\n                EndpointId: endpointId\n              };\n              command = new GetInAppMessagesCommand(input);\n              logger.debug('getting in-app messages', input);\n              return [4 /*yield*/, pinpointClient.send(command)];\n            case 5:\n              response = _b.sent();\n              messages = response.InAppMessagesResponse.InAppMessageCampaigns;\n              dispatchInAppMessagingEvent('getInAppMessages', messages);\n              return [2 /*return*/, messages];\n            case 6:\n              err_1 = _b.sent();\n              logger.error('Error getting in-app messages', err_1);\n              throw err_1;\n            case 7:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.processInAppMessages = function (messages, event) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var highestPrioritySeen;\n        var _this = this;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!this.initialized) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.init()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              return [2 /*return*/, this.normalizeMessages(messages.reduce(function (acc, message) {\n                var messageQualifies = matchesEventType(message, event) && matchesAttributes(message, event) && matchesMetrics(message, event) && isBeforeEndDate(message) && _this.isBelowCap(message);\n                // filter all qualifying messages returning only those that are of (relative) highest priority\n                if (messageQualifies) {\n                  // have not yet encountered message with priority\n                  if (!highestPrioritySeen) {\n                    // this message has priority, so reset the accumulator with this message only\n                    if (message.Priority) {\n                      highestPrioritySeen = message.Priority;\n                      return [message];\n                    } else {\n                      // this message also has no priority, so just add this message to accumulator\n                      acc.push(message);\n                    }\n                    // have previously encountered message with priority, so only messages with priority matter now\n                  } else if (message.Priority) {\n                    // this message has higher priority (lower number), so reset the accumulator with this message only\n                    if (message.Priority < highestPrioritySeen) {\n                      highestPrioritySeen = message.Priority;\n                      return [message];\n                      // this message has the same priority, so just add this message to accumulator\n                    } else if (message.Priority === highestPrioritySeen) {\n                      acc.push(message);\n                    }\n                  }\n                }\n                return acc;\n              }, []))];\n          }\n        });\n      });\n    };\n    this.identifyUser = function (userId, userInfo) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var err_2;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!this.initialized) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.init()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              _a.trys.push([2, 4,, 5]);\n              return [4 /*yield*/, this.updateEndpoint(userId, userInfo)];\n            case 3:\n              _a.sent();\n              return [3 /*break*/, 5];\n            case 4:\n              err_2 = _a.sent();\n              logger.error('Error identifying user', err_2);\n              throw err_2;\n            case 5:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.init = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, endpointId, storage, providerName, _b, err_3;\n        return __generator(this, function (_c) {\n          switch (_c.label) {\n            case 0:\n              _a = this.config, endpointId = _a.endpointId, storage = _a.storage;\n              providerName = this.getProviderName();\n              _c.label = 1;\n            case 1:\n              _c.trys.push([1, 6,, 7]);\n              if (!(typeof storage.sync === 'function')) return [3 /*break*/, 3];\n              return [4 /*yield*/, storage.sync()];\n            case 2:\n              _c.sent();\n              _c.label = 3;\n            case 3:\n              if (!!endpointId) return [3 /*break*/, 5];\n              _b = this.config;\n              return [4 /*yield*/, this.getEndpointId()];\n            case 4:\n              _b.endpointId = _c.sent();\n              _c.label = 5;\n            case 5:\n              this.initialized = true;\n              return [3 /*break*/, 7];\n            case 6:\n              err_3 = _c.sent();\n              logger.error(\"Failed to initialize \" + providerName, err_3);\n              return [3 /*break*/, 7];\n            case 7:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.initPinpointClient = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, appId, credentials, pinpointClient, region;\n        return __generator(this, function (_b) {\n          _a = this.config, appId = _a.appId, credentials = _a.credentials, pinpointClient = _a.pinpointClient, region = _a.region;\n          if (!appId || !credentials || !region) {\n            throw new Error('One or more of credentials, appId or region is not configured');\n          }\n          if (pinpointClient) {\n            pinpointClient.destroy();\n          }\n          this.config.pinpointClient = new PinpointClient({\n            region: region,\n            credentials: credentials,\n            customUserAgent: getAmplifyUserAgent()\n          });\n          return [2 /*return*/];\n        });\n      });\n    };\n\n    this.getEndpointId = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var appId, cacheKey, cachedEndpointId, endpointId, ttl, expiration;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              appId = this.config.appId;\n              cacheKey = this.getSubCategory() + \":\" + this.getProviderName() + \":\" + appId;\n              return [4 /*yield*/, Cache.getItem(cacheKey)];\n            case 1:\n              cachedEndpointId = _a.sent();\n              // Found in cache, just return it\n              if (cachedEndpointId) {\n                return [2 /*return*/, cachedEndpointId];\n              }\n              endpointId = uuid();\n              ttl = 1000 * 60 * 60 * 24 * 365 * 100;\n              expiration = new Date().getTime() + ttl;\n              Cache.setItem(cacheKey, endpointId, {\n                expires: expiration,\n                priority: 1\n              });\n              return [2 /*return*/, endpointId];\n          }\n        });\n      });\n    };\n    this.updateEndpoint = function (userId, userInfo) {\n      if (userId === void 0) {\n        userId = null;\n      }\n      if (userInfo === void 0) {\n        userInfo = null;\n      }\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, appId, credentials, endpointId, _b, endpointInfo, pinpointClient, currentCredentials, credentialsUpdated, _c, address, attributes, demographic, location_1, metrics, optOut, _d, appVersion, make, model, platform, version, input, command, err_4;\n        var _e;\n        return __generator(this, function (_f) {\n          switch (_f.label) {\n            case 0:\n              _a = this.config, appId = _a.appId, credentials = _a.credentials, endpointId = _a.endpointId, _b = _a.endpointInfo, endpointInfo = _b === void 0 ? {} : _b, pinpointClient = _a.pinpointClient;\n              return [4 /*yield*/, this.getCredentials()];\n            case 1:\n              currentCredentials = _f.sent();\n              credentialsUpdated = !credentials || Object.keys(currentCredentials).some(function (key) {\n                return currentCredentials[key] !== credentials[key];\n              });\n              // If endpoint is already initialized, and nothing else is changing, just early return\n              if (this.endpointInitialized && !credentialsUpdated && !userId && !userInfo) {\n                return [2 /*return*/];\n              }\n              // Update credentials\n              this.config.credentials = currentCredentials;\n              _f.label = 2;\n            case 2:\n              _f.trys.push([2, 6,, 7]);\n              if (!(!pinpointClient || credentialsUpdated)) return [3 /*break*/, 4];\n              return [4 /*yield*/, this.initPinpointClient()];\n            case 3:\n              _f.sent();\n              _f.label = 4;\n            case 4:\n              _c = userInfo !== null && userInfo !== void 0 ? userInfo : {}, address = _c.address, attributes = _c.attributes, demographic = _c.demographic, location_1 = _c.location, metrics = _c.metrics, optOut = _c.optOut;\n              _d = this.clientInfo, appVersion = _d.appVersion, make = _d.make, model = _d.model, platform = _d.platform, version = _d.version;\n              input = {\n                ApplicationId: appId,\n                EndpointId: endpointId,\n                EndpointRequest: {\n                  RequestId: uuid(),\n                  EffectiveDate: new Date().toISOString(),\n                  ChannelType: ChannelType.IN_APP,\n                  Address: address !== null && address !== void 0 ? address : endpointInfo.address,\n                  Attributes: __assign(__assign({}, endpointInfo.attributes), attributes),\n                  Demographic: __assign({\n                    AppVersion: appVersion,\n                    Make: make,\n                    Model: model,\n                    ModelVersion: version,\n                    Platform: platform\n                  }, transferKeyToUpperCase(__assign(__assign({}, endpointInfo.demographic), demographic))),\n                  Location: transferKeyToUpperCase(__assign(__assign({}, endpointInfo.location), location_1)),\n                  Metrics: __assign(__assign({}, endpointInfo.metrics), metrics),\n                  OptOut: optOut !== null && optOut !== void 0 ? optOut : endpointInfo.optOut,\n                  User: {\n                    UserId: (_e = userId !== null && userId !== void 0 ? userId : endpointInfo.userId) !== null && _e !== void 0 ? _e : currentCredentials.identityId,\n                    UserAttributes: attributes !== null && attributes !== void 0 ? attributes : endpointInfo.userAttributes\n                  }\n                }\n              };\n              command = new UpdateEndpointCommand(input);\n              logger.debug('updating endpoint', input);\n              return [4 /*yield*/, this.config.pinpointClient.send(command)];\n            case 5:\n              _f.sent();\n              this.endpointInitialized = true;\n              return [3 /*break*/, 7];\n            case 6:\n              err_4 = _f.sent();\n              throw err_4;\n            case 7:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.getCredentials = function () {\n      return __awaiter(_this, void 0, void 0, function () {\n        var credentials, err_5;\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              _a.trys.push([0, 2,, 3]);\n              return [4 /*yield*/, Credentials.get()];\n            case 1:\n              credentials = _a.sent();\n              if (!credentials) {\n                logger.debug('no credentials found');\n                return [2 /*return*/, null];\n              }\n              return [2 /*return*/, Credentials.shear(credentials)];\n            case 2:\n              err_5 = _a.sent();\n              logger.error('Error getting credentials:', err_5);\n              return [2 /*return*/, null];\n            case 3:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.sessionStateChangeHandler = function (state) {\n      if (state === 'started') {\n        // reset all session counts\n        _this.sessionMessageCountMap = {};\n      }\n    };\n    this.isBelowCap = function (_a) {\n      var CampaignId = _a.CampaignId,\n        SessionCap = _a.SessionCap,\n        DailyCap = _a.DailyCap,\n        TotalCap = _a.TotalCap;\n      var _b = _this.getMessageCounts(CampaignId),\n        sessionCount = _b.sessionCount,\n        dailyCount = _b.dailyCount,\n        totalCount = _b.totalCount;\n      return (!SessionCap || sessionCount < SessionCap) && (!DailyCap || dailyCount < DailyCap) && (!TotalCap || totalCount < TotalCap);\n    };\n    // Use the current session count in memory or initialize as empty count\n    this.getSessionCount = function (messageId) {\n      return _this.sessionMessageCountMap[messageId] || 0;\n    };\n    this.getDailyCount = function () {\n      var storage = _this.config.storage;\n      var today = getStartOfDay();\n      var item = storage.getItem(MESSAGE_DAILY_COUNT_KEY);\n      // Parse stored count or initialize as empty count\n      var counter = item ? JSON.parse(item) : {\n        count: 0,\n        lastCountTimestamp: today\n      };\n      // If the stored counter timestamp is today, use it as the count, otherwise reset to 0\n      return counter.lastCountTimestamp === today ? counter.count : 0;\n    };\n    this.getTotalCountMap = function () {\n      var storage = _this.config.storage;\n      var item = storage.getItem(MESSAGE_TOTAL_COUNT_KEY);\n      // Parse stored count map or initialize as empty\n      return item ? JSON.parse(item) : {};\n    };\n    this.getTotalCount = function (messageId) {\n      var countMap = _this.getTotalCountMap();\n      // Return stored count or initialize as empty count\n      return countMap[messageId] || 0;\n    };\n    this.getMessageCounts = function (messageId) {\n      try {\n        return {\n          sessionCount: _this.getSessionCount(messageId),\n          dailyCount: _this.getDailyCount(),\n          totalCount: _this.getTotalCount(messageId)\n        };\n      } catch (err) {\n        logger.error('Failed to get message counts from storage', err);\n      }\n    };\n    this.setSessionCount = function (messageId, count) {\n      _this.sessionMessageCountMap[messageId] = count;\n    };\n    this.setDailyCount = function (count) {\n      var storage = _this.config.storage;\n      var dailyCount = {\n        count: count,\n        lastCountTimestamp: getStartOfDay()\n      };\n      try {\n        storage.setItem(MESSAGE_DAILY_COUNT_KEY, JSON.stringify(dailyCount));\n      } catch (err) {\n        logger.error('Failed to save daily message count to storage', err);\n      }\n    };\n    this.setTotalCountMap = function (countMap) {\n      var storage = _this.config.storage;\n      try {\n        storage.setItem(MESSAGE_TOTAL_COUNT_KEY, JSON.stringify(countMap));\n      } catch (err) {\n        logger.error('Failed to save total count to storage', err);\n      }\n    };\n    this.setTotalCount = function (messageId, count) {\n      var _a;\n      var updatedMap = __assign(__assign({}, _this.getTotalCountMap()), (_a = {}, _a[messageId] = count, _a));\n      _this.setTotalCountMap(updatedMap);\n    };\n    this.incrementCounts = function (messageId) {\n      return __awaiter(_this, void 0, void 0, function () {\n        var _a, sessionCount, dailyCount, totalCount;\n        return __generator(this, function (_b) {\n          _a = this.getMessageCounts(messageId), sessionCount = _a.sessionCount, dailyCount = _a.dailyCount, totalCount = _a.totalCount;\n          this.setSessionCount(messageId, sessionCount + 1);\n          this.setDailyCount(dailyCount + 1);\n          this.setTotalCount(messageId, totalCount + 1);\n          return [2 /*return*/];\n        });\n      });\n    };\n\n    this.normalizeMessages = function (messages) {\n      return messages.map(function (message) {\n        var CampaignId = message.CampaignId,\n          InAppMessage = message.InAppMessage;\n        return {\n          id: CampaignId,\n          content: extractContent(message),\n          layout: interpretLayout(InAppMessage.Layout),\n          metadata: extractMetadata(message)\n        };\n      });\n    };\n    this.recordMessageEvent = function (message, event) {\n      return __awaiter(_this, void 0, void 0, function () {\n        return __generator(this, function (_a) {\n          switch (_a.label) {\n            case 0:\n              if (!!this.initialized) return [3 /*break*/, 2];\n              return [4 /*yield*/, this.init()];\n            case 1:\n              _a.sent();\n              _a.label = 2;\n            case 2:\n              recordAnalyticsEvent(event, message);\n              if (!(event === AWSPinpointMessageEvent.MESSAGE_DISPLAYED)) return [3 /*break*/, 4];\n              return [4 /*yield*/, this.incrementCounts(message.id)];\n            case 3:\n              _a.sent();\n              _a.label = 4;\n            case 4:\n              return [2 /*return*/];\n          }\n        });\n      });\n    };\n\n    this.sessionMessageCountMap = {};\n    this.config = {\n      storage: new StorageHelper().getStorage()\n    };\n    this.clientInfo = (_a = ClientDevice.clientInfo()) !== null && _a !== void 0 ? _a : {};\n  }\n  /**\n   * get the category of the plugin\n   */\n  AWSPinpointProvider.prototype.getCategory = function () {\n    return AWSPinpointProvider.category;\n  };\n  /**\n   * get the sub-category of the plugin\n   */\n  AWSPinpointProvider.prototype.getSubCategory = function () {\n    return AWSPinpointProvider.subCategory;\n  };\n  /**\n   * get provider name of the plugin\n   */\n  AWSPinpointProvider.prototype.getProviderName = function () {\n    return AWSPinpointProvider.providerName;\n  };\n  AWSPinpointProvider.category = 'Notifications';\n  AWSPinpointProvider.subCategory = 'InAppMessaging';\n  AWSPinpointProvider.providerName = 'AWSPinpoint';\n  return AWSPinpointProvider;\n}();\nexport default AWSPinpointProvider;","map":{"version":3,"names":["__assign","__awaiter","__generator","ClientDevice","Credentials","getAmplifyUserAgent","StorageHelper","transferKeyToUpperCase","Cache","ChannelType","GetInAppMessagesCommand","UpdateEndpointCommand","PinpointClient","v4","uuid","addMessageInteractionEventListener","SessionTracker","InAppMessageInteractionEvent","AWSPinpointMessageEvent","clearMemo","dispatchInAppMessagingEvent","extractContent","extractMetadata","getStartOfDay","interpretLayout","isBeforeEndDate","logger","matchesAttributes","matchesEventType","matchesMetrics","recordAnalyticsEvent","MESSAGE_DAILY_COUNT_KEY","MESSAGE_TOTAL_COUNT_KEY","AWSPinpointProvider","_this","_a","config","configured","endpointInitialized","initialized","configure","debug","sessionTracker","sessionStateChangeHandler","start","message","recordMessageEvent","MESSAGE_DISPLAYED","MESSAGE_DISMISSED","MESSAGE_ACTION_TAKEN","getInAppMessages","appId","endpointId","pinpointClient","input","command","response","messages","err_1","_b","label","init","sent","trys","push","updateEndpoint","ApplicationId","EndpointId","send","InAppMessagesResponse","InAppMessageCampaigns","error","processInAppMessages","event","highestPrioritySeen","normalizeMessages","reduce","acc","messageQualifies","isBelowCap","Priority","identifyUser","userId","userInfo","err_2","storage","providerName","err_3","_c","getProviderName","sync","getEndpointId","initPinpointClient","credentials","region","Error","destroy","customUserAgent","cacheKey","cachedEndpointId","ttl","expiration","getSubCategory","getItem","Date","getTime","setItem","expires","priority","endpointInfo","currentCredentials","credentialsUpdated","address","attributes","demographic","location_1","metrics","optOut","_d","appVersion","make","model","platform","version","err_4","_e","_f","getCredentials","Object","keys","some","key","location","clientInfo","EndpointRequest","RequestId","EffectiveDate","toISOString","IN_APP","Address","Attributes","Demographic","AppVersion","Make","Model","ModelVersion","Platform","Location","Metrics","OptOut","User","UserId","identityId","UserAttributes","userAttributes","err_5","get","shear","state","sessionMessageCountMap","CampaignId","SessionCap","DailyCap","TotalCap","getMessageCounts","sessionCount","dailyCount","totalCount","getSessionCount","messageId","getDailyCount","today","item","counter","JSON","parse","count","lastCountTimestamp","getTotalCountMap","getTotalCount","countMap","err","setSessionCount","setDailyCount","stringify","setTotalCountMap","setTotalCount","updatedMap","incrementCounts","map","InAppMessage","id","content","layout","Layout","metadata","getStorage","prototype","getCategory","category","subCategory"],"sources":["/Users/macbook/Documents/Chatapp/temp-repo-chatbot/frontend/node_modules/@aws-amplify/notifications/lib-esm/InAppMessaging/Providers/AWSPinpointProvider/index.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __awaiter, __generator } from \"tslib\";\nimport { ClientDevice, Credentials, getAmplifyUserAgent, StorageHelper, transferKeyToUpperCase, } from '@aws-amplify/core';\nimport { Cache } from '@aws-amplify/cache';\nimport { ChannelType, GetInAppMessagesCommand, UpdateEndpointCommand, PinpointClient, } from '@aws-sdk/client-pinpoint';\nimport { v4 as uuid } from 'uuid';\nimport { addMessageInteractionEventListener } from '../../eventListeners';\nimport SessionTracker from '../../SessionTracker';\nimport { InAppMessageInteractionEvent, } from '../../types';\nimport { AWSPinpointMessageEvent, } from './types';\nimport { clearMemo, dispatchInAppMessagingEvent, extractContent, extractMetadata, getStartOfDay, interpretLayout, isBeforeEndDate, logger, matchesAttributes, matchesEventType, matchesMetrics, recordAnalyticsEvent, } from './utils';\nvar MESSAGE_DAILY_COUNT_KEY = 'pinpointProvider_inAppMessages_dailyCount';\nvar MESSAGE_TOTAL_COUNT_KEY = 'pinpointProvider_inAppMessages_totalCount';\nvar AWSPinpointProvider = /** @class */ (function () {\n    function AWSPinpointProvider() {\n        var _this = this;\n        var _a;\n        this.config = {};\n        this.configured = false;\n        this.endpointInitialized = false;\n        this.initialized = false;\n        this.configure = function (config) {\n            if (config === void 0) { config = {}; }\n            _this.config = __assign(__assign({}, _this.config), config);\n            logger.debug('configure AWSPinpointProvider', _this.config);\n            // some configuration steps should not be re-run even if provider is re-configured for some reason\n            if (!_this.configured) {\n                _this.sessionTracker = new SessionTracker(_this.sessionStateChangeHandler);\n                _this.sessionTracker.start();\n                // wire up default Pinpoint message event handling\n                addMessageInteractionEventListener(function (message) {\n                    _this.recordMessageEvent(message, AWSPinpointMessageEvent.MESSAGE_DISPLAYED);\n                }, InAppMessageInteractionEvent.MESSAGE_DISPLAYED);\n                addMessageInteractionEventListener(function (message) {\n                    _this.recordMessageEvent(message, AWSPinpointMessageEvent.MESSAGE_DISMISSED);\n                }, InAppMessageInteractionEvent.MESSAGE_DISMISSED);\n                addMessageInteractionEventListener(function (message) {\n                    _this.recordMessageEvent(message, AWSPinpointMessageEvent.MESSAGE_ACTION_TAKEN);\n                }, InAppMessageInteractionEvent.MESSAGE_ACTION_TAKEN);\n            }\n            _this.configured = true;\n            dispatchInAppMessagingEvent('pinpointProvider_configured', null);\n            return _this.config;\n        };\n        this.getInAppMessages = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, appId, endpointId, pinpointClient, input, command, response, messages, err_1;\n            return __generator(this, function (_b) {\n                switch (_b.label) {\n                    case 0:\n                        if (!!this.initialized) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.init()];\n                    case 1:\n                        _b.sent();\n                        _b.label = 2;\n                    case 2:\n                        // There is no way to granuarly reconcile the filter memoization as the keys are composited from a message id and\n                        // event properties thus opting to just clear them out when getting messages rather than leave potentially\n                        // obsolete entries that will no longer serve any purpose.\n                        clearMemo();\n                        _b.label = 3;\n                    case 3:\n                        _b.trys.push([3, 6, , 7]);\n                        return [4 /*yield*/, this.updateEndpoint()];\n                    case 4:\n                        _b.sent();\n                        _a = this.config, appId = _a.appId, endpointId = _a.endpointId, pinpointClient = _a.pinpointClient;\n                        input = {\n                            ApplicationId: appId,\n                            EndpointId: endpointId,\n                        };\n                        command = new GetInAppMessagesCommand(input);\n                        logger.debug('getting in-app messages', input);\n                        return [4 /*yield*/, pinpointClient.send(command)];\n                    case 5:\n                        response = _b.sent();\n                        messages = response.InAppMessagesResponse.InAppMessageCampaigns;\n                        dispatchInAppMessagingEvent('getInAppMessages', messages);\n                        return [2 /*return*/, messages];\n                    case 6:\n                        err_1 = _b.sent();\n                        logger.error('Error getting in-app messages', err_1);\n                        throw err_1;\n                    case 7: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.processInAppMessages = function (messages, event) { return __awaiter(_this, void 0, void 0, function () {\n            var highestPrioritySeen;\n            var _this = this;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.initialized) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.init()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2: return [2 /*return*/, this.normalizeMessages(messages.reduce(function (acc, message) {\n                            var messageQualifies = matchesEventType(message, event) &&\n                                matchesAttributes(message, event) &&\n                                matchesMetrics(message, event) &&\n                                isBeforeEndDate(message) &&\n                                _this.isBelowCap(message);\n                            // filter all qualifying messages returning only those that are of (relative) highest priority\n                            if (messageQualifies) {\n                                // have not yet encountered message with priority\n                                if (!highestPrioritySeen) {\n                                    // this message has priority, so reset the accumulator with this message only\n                                    if (message.Priority) {\n                                        highestPrioritySeen = message.Priority;\n                                        return [message];\n                                    }\n                                    else {\n                                        // this message also has no priority, so just add this message to accumulator\n                                        acc.push(message);\n                                    }\n                                    // have previously encountered message with priority, so only messages with priority matter now\n                                }\n                                else if (message.Priority) {\n                                    // this message has higher priority (lower number), so reset the accumulator with this message only\n                                    if (message.Priority < highestPrioritySeen) {\n                                        highestPrioritySeen = message.Priority;\n                                        return [message];\n                                        // this message has the same priority, so just add this message to accumulator\n                                    }\n                                    else if (message.Priority === highestPrioritySeen) {\n                                        acc.push(message);\n                                    }\n                                }\n                            }\n                            return acc;\n                        }, []))];\n                }\n            });\n        }); };\n        this.identifyUser = function (userId, userInfo) { return __awaiter(_this, void 0, void 0, function () {\n            var err_2;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.initialized) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.init()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        _a.trys.push([2, 4, , 5]);\n                        return [4 /*yield*/, this.updateEndpoint(userId, userInfo)];\n                    case 3:\n                        _a.sent();\n                        return [3 /*break*/, 5];\n                    case 4:\n                        err_2 = _a.sent();\n                        logger.error('Error identifying user', err_2);\n                        throw err_2;\n                    case 5: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.init = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, endpointId, storage, providerName, _b, err_3;\n            return __generator(this, function (_c) {\n                switch (_c.label) {\n                    case 0:\n                        _a = this.config, endpointId = _a.endpointId, storage = _a.storage;\n                        providerName = this.getProviderName();\n                        _c.label = 1;\n                    case 1:\n                        _c.trys.push([1, 6, , 7]);\n                        if (!(typeof storage.sync === 'function')) return [3 /*break*/, 3];\n                        return [4 /*yield*/, storage.sync()];\n                    case 2:\n                        _c.sent();\n                        _c.label = 3;\n                    case 3:\n                        if (!!endpointId) return [3 /*break*/, 5];\n                        _b = this.config;\n                        return [4 /*yield*/, this.getEndpointId()];\n                    case 4:\n                        _b.endpointId = _c.sent();\n                        _c.label = 5;\n                    case 5:\n                        this.initialized = true;\n                        return [3 /*break*/, 7];\n                    case 6:\n                        err_3 = _c.sent();\n                        logger.error(\"Failed to initialize \" + providerName, err_3);\n                        return [3 /*break*/, 7];\n                    case 7: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.initPinpointClient = function () { return __awaiter(_this, void 0, void 0, function () {\n            var _a, appId, credentials, pinpointClient, region;\n            return __generator(this, function (_b) {\n                _a = this.config, appId = _a.appId, credentials = _a.credentials, pinpointClient = _a.pinpointClient, region = _a.region;\n                if (!appId || !credentials || !region) {\n                    throw new Error('One or more of credentials, appId or region is not configured');\n                }\n                if (pinpointClient) {\n                    pinpointClient.destroy();\n                }\n                this.config.pinpointClient = new PinpointClient({\n                    region: region,\n                    credentials: credentials,\n                    customUserAgent: getAmplifyUserAgent(),\n                });\n                return [2 /*return*/];\n            });\n        }); };\n        this.getEndpointId = function () { return __awaiter(_this, void 0, void 0, function () {\n            var appId, cacheKey, cachedEndpointId, endpointId, ttl, expiration;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        appId = this.config.appId;\n                        cacheKey = this.getSubCategory() + \":\" + this.getProviderName() + \":\" + appId;\n                        return [4 /*yield*/, Cache.getItem(cacheKey)];\n                    case 1:\n                        cachedEndpointId = _a.sent();\n                        // Found in cache, just return it\n                        if (cachedEndpointId) {\n                            return [2 /*return*/, cachedEndpointId];\n                        }\n                        endpointId = uuid();\n                        ttl = 1000 * 60 * 60 * 24 * 365 * 100;\n                        expiration = new Date().getTime() + ttl;\n                        Cache.setItem(cacheKey, endpointId, {\n                            expires: expiration,\n                            priority: 1,\n                        });\n                        return [2 /*return*/, endpointId];\n                }\n            });\n        }); };\n        this.updateEndpoint = function (userId, userInfo) {\n            if (userId === void 0) { userId = null; }\n            if (userInfo === void 0) { userInfo = null; }\n            return __awaiter(_this, void 0, void 0, function () {\n                var _a, appId, credentials, endpointId, _b, endpointInfo, pinpointClient, currentCredentials, credentialsUpdated, _c, address, attributes, demographic, location_1, metrics, optOut, _d, appVersion, make, model, platform, version, input, command, err_4;\n                var _e;\n                return __generator(this, function (_f) {\n                    switch (_f.label) {\n                        case 0:\n                            _a = this.config, appId = _a.appId, credentials = _a.credentials, endpointId = _a.endpointId, _b = _a.endpointInfo, endpointInfo = _b === void 0 ? {} : _b, pinpointClient = _a.pinpointClient;\n                            return [4 /*yield*/, this.getCredentials()];\n                        case 1:\n                            currentCredentials = _f.sent();\n                            credentialsUpdated = !credentials ||\n                                Object.keys(currentCredentials).some(function (key) { return currentCredentials[key] !== credentials[key]; });\n                            // If endpoint is already initialized, and nothing else is changing, just early return\n                            if (this.endpointInitialized &&\n                                !credentialsUpdated &&\n                                !userId &&\n                                !userInfo) {\n                                return [2 /*return*/];\n                            }\n                            // Update credentials\n                            this.config.credentials = currentCredentials;\n                            _f.label = 2;\n                        case 2:\n                            _f.trys.push([2, 6, , 7]);\n                            if (!(!pinpointClient || credentialsUpdated)) return [3 /*break*/, 4];\n                            return [4 /*yield*/, this.initPinpointClient()];\n                        case 3:\n                            _f.sent();\n                            _f.label = 4;\n                        case 4:\n                            _c = userInfo !== null && userInfo !== void 0 ? userInfo : {}, address = _c.address, attributes = _c.attributes, demographic = _c.demographic, location_1 = _c.location, metrics = _c.metrics, optOut = _c.optOut;\n                            _d = this.clientInfo, appVersion = _d.appVersion, make = _d.make, model = _d.model, platform = _d.platform, version = _d.version;\n                            input = {\n                                ApplicationId: appId,\n                                EndpointId: endpointId,\n                                EndpointRequest: {\n                                    RequestId: uuid(),\n                                    EffectiveDate: new Date().toISOString(),\n                                    ChannelType: ChannelType.IN_APP,\n                                    Address: address !== null && address !== void 0 ? address : endpointInfo.address,\n                                    Attributes: __assign(__assign({}, endpointInfo.attributes), attributes),\n                                    Demographic: __assign({ AppVersion: appVersion, Make: make, Model: model, ModelVersion: version, Platform: platform }, transferKeyToUpperCase(__assign(__assign({}, endpointInfo.demographic), demographic))),\n                                    Location: transferKeyToUpperCase(__assign(__assign({}, endpointInfo.location), location_1)),\n                                    Metrics: __assign(__assign({}, endpointInfo.metrics), metrics),\n                                    OptOut: optOut !== null && optOut !== void 0 ? optOut : endpointInfo.optOut,\n                                    User: {\n                                        UserId: (_e = userId !== null && userId !== void 0 ? userId : endpointInfo.userId) !== null && _e !== void 0 ? _e : currentCredentials.identityId,\n                                        UserAttributes: attributes !== null && attributes !== void 0 ? attributes : endpointInfo.userAttributes,\n                                    },\n                                },\n                            };\n                            command = new UpdateEndpointCommand(input);\n                            logger.debug('updating endpoint', input);\n                            return [4 /*yield*/, this.config.pinpointClient.send(command)];\n                        case 5:\n                            _f.sent();\n                            this.endpointInitialized = true;\n                            return [3 /*break*/, 7];\n                        case 6:\n                            err_4 = _f.sent();\n                            throw err_4;\n                        case 7: return [2 /*return*/];\n                    }\n                });\n            });\n        };\n        this.getCredentials = function () { return __awaiter(_this, void 0, void 0, function () {\n            var credentials, err_5;\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        _a.trys.push([0, 2, , 3]);\n                        return [4 /*yield*/, Credentials.get()];\n                    case 1:\n                        credentials = _a.sent();\n                        if (!credentials) {\n                            logger.debug('no credentials found');\n                            return [2 /*return*/, null];\n                        }\n                        return [2 /*return*/, Credentials.shear(credentials)];\n                    case 2:\n                        err_5 = _a.sent();\n                        logger.error('Error getting credentials:', err_5);\n                        return [2 /*return*/, null];\n                    case 3: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.sessionStateChangeHandler = function (state) {\n            if (state === 'started') {\n                // reset all session counts\n                _this.sessionMessageCountMap = {};\n            }\n        };\n        this.isBelowCap = function (_a) {\n            var CampaignId = _a.CampaignId, SessionCap = _a.SessionCap, DailyCap = _a.DailyCap, TotalCap = _a.TotalCap;\n            var _b = _this.getMessageCounts(CampaignId), sessionCount = _b.sessionCount, dailyCount = _b.dailyCount, totalCount = _b.totalCount;\n            return ((!SessionCap || sessionCount < SessionCap) &&\n                (!DailyCap || dailyCount < DailyCap) &&\n                (!TotalCap || totalCount < TotalCap));\n        };\n        // Use the current session count in memory or initialize as empty count\n        this.getSessionCount = function (messageId) {\n            return _this.sessionMessageCountMap[messageId] || 0;\n        };\n        this.getDailyCount = function () {\n            var storage = _this.config.storage;\n            var today = getStartOfDay();\n            var item = storage.getItem(MESSAGE_DAILY_COUNT_KEY);\n            // Parse stored count or initialize as empty count\n            var counter = item\n                ? JSON.parse(item)\n                : { count: 0, lastCountTimestamp: today };\n            // If the stored counter timestamp is today, use it as the count, otherwise reset to 0\n            return counter.lastCountTimestamp === today ? counter.count : 0;\n        };\n        this.getTotalCountMap = function () {\n            var storage = _this.config.storage;\n            var item = storage.getItem(MESSAGE_TOTAL_COUNT_KEY);\n            // Parse stored count map or initialize as empty\n            return item ? JSON.parse(item) : {};\n        };\n        this.getTotalCount = function (messageId) {\n            var countMap = _this.getTotalCountMap();\n            // Return stored count or initialize as empty count\n            return countMap[messageId] || 0;\n        };\n        this.getMessageCounts = function (messageId) {\n            try {\n                return {\n                    sessionCount: _this.getSessionCount(messageId),\n                    dailyCount: _this.getDailyCount(),\n                    totalCount: _this.getTotalCount(messageId),\n                };\n            }\n            catch (err) {\n                logger.error('Failed to get message counts from storage', err);\n            }\n        };\n        this.setSessionCount = function (messageId, count) {\n            _this.sessionMessageCountMap[messageId] = count;\n        };\n        this.setDailyCount = function (count) {\n            var storage = _this.config.storage;\n            var dailyCount = {\n                count: count,\n                lastCountTimestamp: getStartOfDay(),\n            };\n            try {\n                storage.setItem(MESSAGE_DAILY_COUNT_KEY, JSON.stringify(dailyCount));\n            }\n            catch (err) {\n                logger.error('Failed to save daily message count to storage', err);\n            }\n        };\n        this.setTotalCountMap = function (countMap) {\n            var storage = _this.config.storage;\n            try {\n                storage.setItem(MESSAGE_TOTAL_COUNT_KEY, JSON.stringify(countMap));\n            }\n            catch (err) {\n                logger.error('Failed to save total count to storage', err);\n            }\n        };\n        this.setTotalCount = function (messageId, count) {\n            var _a;\n            var updatedMap = __assign(__assign({}, _this.getTotalCountMap()), (_a = {}, _a[messageId] = count, _a));\n            _this.setTotalCountMap(updatedMap);\n        };\n        this.incrementCounts = function (messageId) { return __awaiter(_this, void 0, void 0, function () {\n            var _a, sessionCount, dailyCount, totalCount;\n            return __generator(this, function (_b) {\n                _a = this.getMessageCounts(messageId), sessionCount = _a.sessionCount, dailyCount = _a.dailyCount, totalCount = _a.totalCount;\n                this.setSessionCount(messageId, sessionCount + 1);\n                this.setDailyCount(dailyCount + 1);\n                this.setTotalCount(messageId, totalCount + 1);\n                return [2 /*return*/];\n            });\n        }); };\n        this.normalizeMessages = function (messages) {\n            return messages.map(function (message) {\n                var CampaignId = message.CampaignId, InAppMessage = message.InAppMessage;\n                return {\n                    id: CampaignId,\n                    content: extractContent(message),\n                    layout: interpretLayout(InAppMessage.Layout),\n                    metadata: extractMetadata(message),\n                };\n            });\n        };\n        this.recordMessageEvent = function (message, event) { return __awaiter(_this, void 0, void 0, function () {\n            return __generator(this, function (_a) {\n                switch (_a.label) {\n                    case 0:\n                        if (!!this.initialized) return [3 /*break*/, 2];\n                        return [4 /*yield*/, this.init()];\n                    case 1:\n                        _a.sent();\n                        _a.label = 2;\n                    case 2:\n                        recordAnalyticsEvent(event, message);\n                        if (!(event === AWSPinpointMessageEvent.MESSAGE_DISPLAYED)) return [3 /*break*/, 4];\n                        return [4 /*yield*/, this.incrementCounts(message.id)];\n                    case 3:\n                        _a.sent();\n                        _a.label = 4;\n                    case 4: return [2 /*return*/];\n                }\n            });\n        }); };\n        this.sessionMessageCountMap = {};\n        this.config = {\n            storage: new StorageHelper().getStorage(),\n        };\n        this.clientInfo = (_a = ClientDevice.clientInfo()) !== null && _a !== void 0 ? _a : {};\n    }\n    /**\n     * get the category of the plugin\n     */\n    AWSPinpointProvider.prototype.getCategory = function () {\n        return AWSPinpointProvider.category;\n    };\n    /**\n     * get the sub-category of the plugin\n     */\n    AWSPinpointProvider.prototype.getSubCategory = function () {\n        return AWSPinpointProvider.subCategory;\n    };\n    /**\n     * get provider name of the plugin\n     */\n    AWSPinpointProvider.prototype.getProviderName = function () {\n        return AWSPinpointProvider.providerName;\n    };\n    AWSPinpointProvider.category = 'Notifications';\n    AWSPinpointProvider.subCategory = 'InAppMessaging';\n    AWSPinpointProvider.providerName = 'AWSPinpoint';\n    return AWSPinpointProvider;\n}());\nexport default AWSPinpointProvider;\n//# sourceMappingURL=index.js.map"],"mappings":"AAAA;AACA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AACxD,SAASC,YAAY,EAAEC,WAAW,EAAEC,mBAAmB,EAAEC,aAAa,EAAEC,sBAAsB,QAAS,mBAAmB;AAC1H,SAASC,KAAK,QAAQ,oBAAoB;AAC1C,SAASC,WAAW,EAAEC,uBAAuB,EAAEC,qBAAqB,EAAEC,cAAc,QAAS,0BAA0B;AACvH,SAASC,EAAE,IAAIC,IAAI,QAAQ,MAAM;AACjC,SAASC,kCAAkC,QAAQ,sBAAsB;AACzE,OAAOC,cAAc,MAAM,sBAAsB;AACjD,SAASC,4BAA4B,QAAS,aAAa;AAC3D,SAASC,uBAAuB,QAAS,SAAS;AAClD,SAASC,SAAS,EAAEC,2BAA2B,EAAEC,cAAc,EAAEC,eAAe,EAAEC,aAAa,EAAEC,eAAe,EAAEC,eAAe,EAAEC,MAAM,EAAEC,iBAAiB,EAAEC,gBAAgB,EAAEC,cAAc,EAAEC,oBAAoB,QAAS,SAAS;AACtO,IAAIC,uBAAuB,GAAG,2CAA2C;AACzE,IAAIC,uBAAuB,GAAG,2CAA2C;AACzE,IAAIC,mBAAmB,GAAG,aAAe,YAAY;EACjD,SAASA,mBAAmBA,CAAA,EAAG;IAC3B,IAAIC,KAAK,GAAG,IAAI;IAChB,IAAIC,EAAE;IACN,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC;IAChB,IAAI,CAACC,UAAU,GAAG,KAAK;IACvB,IAAI,CAACC,mBAAmB,GAAG,KAAK;IAChC,IAAI,CAACC,WAAW,GAAG,KAAK;IACxB,IAAI,CAACC,SAAS,GAAG,UAAUJ,MAAM,EAAE;MAC/B,IAAIA,MAAM,KAAK,KAAK,CAAC,EAAE;QAAEA,MAAM,GAAG,CAAC,CAAC;MAAE;MACtCF,KAAK,CAACE,MAAM,GAAGpC,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEkC,KAAK,CAACE,MAAM,CAAC,EAAEA,MAAM,CAAC;MAC3DV,MAAM,CAACe,KAAK,CAAC,+BAA+B,EAAEP,KAAK,CAACE,MAAM,CAAC;MAC3D;MACA,IAAI,CAACF,KAAK,CAACG,UAAU,EAAE;QACnBH,KAAK,CAACQ,cAAc,GAAG,IAAI1B,cAAc,CAACkB,KAAK,CAACS,yBAAyB,CAAC;QAC1ET,KAAK,CAACQ,cAAc,CAACE,KAAK,EAAE;QAC5B;QACA7B,kCAAkC,CAAC,UAAU8B,OAAO,EAAE;UAClDX,KAAK,CAACY,kBAAkB,CAACD,OAAO,EAAE3B,uBAAuB,CAAC6B,iBAAiB,CAAC;QAChF,CAAC,EAAE9B,4BAA4B,CAAC8B,iBAAiB,CAAC;QAClDhC,kCAAkC,CAAC,UAAU8B,OAAO,EAAE;UAClDX,KAAK,CAACY,kBAAkB,CAACD,OAAO,EAAE3B,uBAAuB,CAAC8B,iBAAiB,CAAC;QAChF,CAAC,EAAE/B,4BAA4B,CAAC+B,iBAAiB,CAAC;QAClDjC,kCAAkC,CAAC,UAAU8B,OAAO,EAAE;UAClDX,KAAK,CAACY,kBAAkB,CAACD,OAAO,EAAE3B,uBAAuB,CAAC+B,oBAAoB,CAAC;QACnF,CAAC,EAAEhC,4BAA4B,CAACgC,oBAAoB,CAAC;MACzD;MACAf,KAAK,CAACG,UAAU,GAAG,IAAI;MACvBjB,2BAA2B,CAAC,6BAA6B,EAAE,IAAI,CAAC;MAChE,OAAOc,KAAK,CAACE,MAAM;IACvB,CAAC;IACD,IAAI,CAACc,gBAAgB,GAAG,YAAY;MAAE,OAAOjD,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACtF,IAAIC,EAAE,EAAEgB,KAAK,EAAEC,UAAU,EAAEC,cAAc,EAAEC,KAAK,EAAEC,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,EAAEC,KAAK;QACpF,OAAOxD,WAAW,CAAC,IAAI,EAAE,UAAUyD,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACC,KAAK;YACZ,KAAK,CAAC;cACF,IAAI,CAAC,CAAC,IAAI,CAACrB,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAC/C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACsB,IAAI,EAAE,CAAC;YACrC,KAAK,CAAC;cACFF,EAAE,CAACG,IAAI,EAAE;cACTH,EAAE,CAACC,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACF;cACA;cACA;cACAzC,SAAS,EAAE;cACXwC,EAAE,CAACC,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACFD,EAAE,CAACI,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;cACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACC,cAAc,EAAE,CAAC;YAC/C,KAAK,CAAC;cACFN,EAAE,CAACG,IAAI,EAAE;cACT3B,EAAE,GAAG,IAAI,CAACC,MAAM,EAAEe,KAAK,GAAGhB,EAAE,CAACgB,KAAK,EAAEC,UAAU,GAAGjB,EAAE,CAACiB,UAAU,EAAEC,cAAc,GAAGlB,EAAE,CAACkB,cAAc;cAClGC,KAAK,GAAG;gBACJY,aAAa,EAAEf,KAAK;gBACpBgB,UAAU,EAAEf;cAChB,CAAC;cACDG,OAAO,GAAG,IAAI7C,uBAAuB,CAAC4C,KAAK,CAAC;cAC5C5B,MAAM,CAACe,KAAK,CAAC,yBAAyB,EAAEa,KAAK,CAAC;cAC9C,OAAO,CAAC,CAAC,CAAC,WAAWD,cAAc,CAACe,IAAI,CAACb,OAAO,CAAC,CAAC;YACtD,KAAK,CAAC;cACFC,QAAQ,GAAGG,EAAE,CAACG,IAAI,EAAE;cACpBL,QAAQ,GAAGD,QAAQ,CAACa,qBAAqB,CAACC,qBAAqB;cAC/DlD,2BAA2B,CAAC,kBAAkB,EAAEqC,QAAQ,CAAC;cACzD,OAAO,CAAC,CAAC,CAAC,YAAYA,QAAQ,CAAC;YACnC,KAAK,CAAC;cACFC,KAAK,GAAGC,EAAE,CAACG,IAAI,EAAE;cACjBpC,MAAM,CAAC6C,KAAK,CAAC,+BAA+B,EAAEb,KAAK,CAAC;cACpD,MAAMA,KAAK;YACf,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW;UAAC;QAEtC,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;;IACL,IAAI,CAACc,oBAAoB,GAAG,UAAUf,QAAQ,EAAEgB,KAAK,EAAE;MAAE,OAAOxE,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACzG,IAAIwC,mBAAmB;QACvB,IAAIxC,KAAK,GAAG,IAAI;QAChB,OAAOhC,WAAW,CAAC,IAAI,EAAE,UAAUiC,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACyB,KAAK;YACZ,KAAK,CAAC;cACF,IAAI,CAAC,CAAC,IAAI,CAACrB,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAC/C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACsB,IAAI,EAAE,CAAC;YACrC,KAAK,CAAC;cACF1B,EAAE,CAAC2B,IAAI,EAAE;cACT3B,EAAE,CAACyB,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAACe,iBAAiB,CAAClB,QAAQ,CAACmB,MAAM,CAAC,UAAUC,GAAG,EAAEhC,OAAO,EAAE;gBACrF,IAAIiC,gBAAgB,GAAGlD,gBAAgB,CAACiB,OAAO,EAAE4B,KAAK,CAAC,IACnD9C,iBAAiB,CAACkB,OAAO,EAAE4B,KAAK,CAAC,IACjC5C,cAAc,CAACgB,OAAO,EAAE4B,KAAK,CAAC,IAC9BhD,eAAe,CAACoB,OAAO,CAAC,IACxBX,KAAK,CAAC6C,UAAU,CAAClC,OAAO,CAAC;gBAC7B;gBACA,IAAIiC,gBAAgB,EAAE;kBAClB;kBACA,IAAI,CAACJ,mBAAmB,EAAE;oBACtB;oBACA,IAAI7B,OAAO,CAACmC,QAAQ,EAAE;sBAClBN,mBAAmB,GAAG7B,OAAO,CAACmC,QAAQ;sBACtC,OAAO,CAACnC,OAAO,CAAC;oBACpB,CAAC,MACI;sBACD;sBACAgC,GAAG,CAACb,IAAI,CAACnB,OAAO,CAAC;oBACrB;oBACA;kBACJ,CAAC,MACI,IAAIA,OAAO,CAACmC,QAAQ,EAAE;oBACvB;oBACA,IAAInC,OAAO,CAACmC,QAAQ,GAAGN,mBAAmB,EAAE;sBACxCA,mBAAmB,GAAG7B,OAAO,CAACmC,QAAQ;sBACtC,OAAO,CAACnC,OAAO,CAAC;sBAChB;oBACJ,CAAC,MACI,IAAIA,OAAO,CAACmC,QAAQ,KAAKN,mBAAmB,EAAE;sBAC/CG,GAAG,CAACb,IAAI,CAACnB,OAAO,CAAC;oBACrB;kBACJ;gBACJ;gBACA,OAAOgC,GAAG;cACd,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;UAAC;QAErB,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;IACL,IAAI,CAACI,YAAY,GAAG,UAAUC,MAAM,EAAEC,QAAQ,EAAE;MAAE,OAAOlF,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QAClG,IAAIkD,KAAK;QACT,OAAOlF,WAAW,CAAC,IAAI,EAAE,UAAUiC,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACyB,KAAK;YACZ,KAAK,CAAC;cACF,IAAI,CAAC,CAAC,IAAI,CAACrB,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAC/C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACsB,IAAI,EAAE,CAAC;YACrC,KAAK,CAAC;cACF1B,EAAE,CAAC2B,IAAI,EAAE;cACT3B,EAAE,CAACyB,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACFzB,EAAE,CAAC4B,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;cACzB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACC,cAAc,CAACiB,MAAM,EAAEC,QAAQ,CAAC,CAAC;YAC/D,KAAK,CAAC;cACFhD,EAAE,CAAC2B,IAAI,EAAE;cACT,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC3B,KAAK,CAAC;cACFsB,KAAK,GAAGjD,EAAE,CAAC2B,IAAI,EAAE;cACjBpC,MAAM,CAAC6C,KAAK,CAAC,wBAAwB,EAAEa,KAAK,CAAC;cAC7C,MAAMA,KAAK;YACf,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW;UAAC;QAEtC,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;;IACL,IAAI,CAACvB,IAAI,GAAG,YAAY;MAAE,OAAO5D,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QAC1E,IAAIC,EAAE,EAAEiB,UAAU,EAAEiC,OAAO,EAAEC,YAAY,EAAE3B,EAAE,EAAE4B,KAAK;QACpD,OAAOrF,WAAW,CAAC,IAAI,EAAE,UAAUsF,EAAE,EAAE;UACnC,QAAQA,EAAE,CAAC5B,KAAK;YACZ,KAAK,CAAC;cACFzB,EAAE,GAAG,IAAI,CAACC,MAAM,EAAEgB,UAAU,GAAGjB,EAAE,CAACiB,UAAU,EAAEiC,OAAO,GAAGlD,EAAE,CAACkD,OAAO;cAClEC,YAAY,GAAG,IAAI,CAACG,eAAe,EAAE;cACrCD,EAAE,CAAC5B,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACF4B,EAAE,CAACzB,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;cACzB,IAAI,EAAE,OAAOqB,OAAO,CAACK,IAAI,KAAK,UAAU,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAClE,OAAO,CAAC,CAAC,CAAC,WAAWL,OAAO,CAACK,IAAI,EAAE,CAAC;YACxC,KAAK,CAAC;cACFF,EAAE,CAAC1B,IAAI,EAAE;cACT0B,EAAE,CAAC5B,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACF,IAAI,CAAC,CAACR,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cACzCO,EAAE,GAAG,IAAI,CAACvB,MAAM;cAChB,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACuD,aAAa,EAAE,CAAC;YAC9C,KAAK,CAAC;cACFhC,EAAE,CAACP,UAAU,GAAGoC,EAAE,CAAC1B,IAAI,EAAE;cACzB0B,EAAE,CAAC5B,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACF,IAAI,CAACrB,WAAW,GAAG,IAAI;cACvB,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC3B,KAAK,CAAC;cACFgD,KAAK,GAAGC,EAAE,CAAC1B,IAAI,EAAE;cACjBpC,MAAM,CAAC6C,KAAK,CAAC,uBAAuB,GAAGe,YAAY,EAAEC,KAAK,CAAC;cAC3D,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC3B,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW;UAAC;QAEtC,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;;IACL,IAAI,CAACK,kBAAkB,GAAG,YAAY;MAAE,OAAO3F,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACxF,IAAIC,EAAE,EAAEgB,KAAK,EAAE0C,WAAW,EAAExC,cAAc,EAAEyC,MAAM;QAClD,OAAO5F,WAAW,CAAC,IAAI,EAAE,UAAUyD,EAAE,EAAE;UACnCxB,EAAE,GAAG,IAAI,CAACC,MAAM,EAAEe,KAAK,GAAGhB,EAAE,CAACgB,KAAK,EAAE0C,WAAW,GAAG1D,EAAE,CAAC0D,WAAW,EAAExC,cAAc,GAAGlB,EAAE,CAACkB,cAAc,EAAEyC,MAAM,GAAG3D,EAAE,CAAC2D,MAAM;UACxH,IAAI,CAAC3C,KAAK,IAAI,CAAC0C,WAAW,IAAI,CAACC,MAAM,EAAE;YACnC,MAAM,IAAIC,KAAK,CAAC,+DAA+D,CAAC;UACpF;UACA,IAAI1C,cAAc,EAAE;YAChBA,cAAc,CAAC2C,OAAO,EAAE;UAC5B;UACA,IAAI,CAAC5D,MAAM,CAACiB,cAAc,GAAG,IAAIzC,cAAc,CAAC;YAC5CkF,MAAM,EAAEA,MAAM;YACdD,WAAW,EAAEA,WAAW;YACxBI,eAAe,EAAE5F,mBAAmB;UACxC,CAAC,CAAC;UACF,OAAO,CAAC,CAAC,CAAC,WAAW;QACzB,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;;IACL,IAAI,CAACsF,aAAa,GAAG,YAAY;MAAE,OAAO1F,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACnF,IAAIiB,KAAK,EAAE+C,QAAQ,EAAEC,gBAAgB,EAAE/C,UAAU,EAAEgD,GAAG,EAAEC,UAAU;QAClE,OAAOnG,WAAW,CAAC,IAAI,EAAE,UAAUiC,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACyB,KAAK;YACZ,KAAK,CAAC;cACFT,KAAK,GAAG,IAAI,CAACf,MAAM,CAACe,KAAK;cACzB+C,QAAQ,GAAG,IAAI,CAACI,cAAc,EAAE,GAAG,GAAG,GAAG,IAAI,CAACb,eAAe,EAAE,GAAG,GAAG,GAAGtC,KAAK;cAC7E,OAAO,CAAC,CAAC,CAAC,WAAW3C,KAAK,CAAC+F,OAAO,CAACL,QAAQ,CAAC,CAAC;YACjD,KAAK,CAAC;cACFC,gBAAgB,GAAGhE,EAAE,CAAC2B,IAAI,EAAE;cAC5B;cACA,IAAIqC,gBAAgB,EAAE;gBAClB,OAAO,CAAC,CAAC,CAAC,YAAYA,gBAAgB,CAAC;cAC3C;cACA/C,UAAU,GAAGtC,IAAI,EAAE;cACnBsF,GAAG,GAAG,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,GAAG,GAAG,GAAG;cACrCC,UAAU,GAAG,IAAIG,IAAI,EAAE,CAACC,OAAO,EAAE,GAAGL,GAAG;cACvC5F,KAAK,CAACkG,OAAO,CAACR,QAAQ,EAAE9C,UAAU,EAAE;gBAChCuD,OAAO,EAAEN,UAAU;gBACnBO,QAAQ,EAAE;cACd,CAAC,CAAC;cACF,OAAO,CAAC,CAAC,CAAC,YAAYxD,UAAU,CAAC;UAAC;QAE9C,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;IACL,IAAI,CAACa,cAAc,GAAG,UAAUiB,MAAM,EAAEC,QAAQ,EAAE;MAC9C,IAAID,MAAM,KAAK,KAAK,CAAC,EAAE;QAAEA,MAAM,GAAG,IAAI;MAAE;MACxC,IAAIC,QAAQ,KAAK,KAAK,CAAC,EAAE;QAAEA,QAAQ,GAAG,IAAI;MAAE;MAC5C,OAAOlF,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QAChD,IAAIC,EAAE,EAAEgB,KAAK,EAAE0C,WAAW,EAAEzC,UAAU,EAAEO,EAAE,EAAEkD,YAAY,EAAExD,cAAc,EAAEyD,kBAAkB,EAAEC,kBAAkB,EAAEvB,EAAE,EAAEwB,OAAO,EAAEC,UAAU,EAAEC,WAAW,EAAEC,UAAU,EAAEC,OAAO,EAAEC,MAAM,EAAEC,EAAE,EAAEC,UAAU,EAAEC,IAAI,EAAEC,KAAK,EAAEC,QAAQ,EAAEC,OAAO,EAAErE,KAAK,EAAEC,OAAO,EAAEqE,KAAK;QAC1P,IAAIC,EAAE;QACN,OAAO3H,WAAW,CAAC,IAAI,EAAE,UAAU4H,EAAE,EAAE;UACnC,QAAQA,EAAE,CAAClE,KAAK;YACZ,KAAK,CAAC;cACFzB,EAAE,GAAG,IAAI,CAACC,MAAM,EAAEe,KAAK,GAAGhB,EAAE,CAACgB,KAAK,EAAE0C,WAAW,GAAG1D,EAAE,CAAC0D,WAAW,EAAEzC,UAAU,GAAGjB,EAAE,CAACiB,UAAU,EAAEO,EAAE,GAAGxB,EAAE,CAAC0E,YAAY,EAAEA,YAAY,GAAGlD,EAAE,KAAK,KAAK,CAAC,GAAG,CAAC,CAAC,GAAGA,EAAE,EAAEN,cAAc,GAAGlB,EAAE,CAACkB,cAAc;cAC9L,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC0E,cAAc,EAAE,CAAC;YAC/C,KAAK,CAAC;cACFjB,kBAAkB,GAAGgB,EAAE,CAAChE,IAAI,EAAE;cAC9BiD,kBAAkB,GAAG,CAAClB,WAAW,IAC7BmC,MAAM,CAACC,IAAI,CAACnB,kBAAkB,CAAC,CAACoB,IAAI,CAAC,UAAUC,GAAG,EAAE;gBAAE,OAAOrB,kBAAkB,CAACqB,GAAG,CAAC,KAAKtC,WAAW,CAACsC,GAAG,CAAC;cAAE,CAAC,CAAC;cACjH;cACA,IAAI,IAAI,CAAC7F,mBAAmB,IACxB,CAACyE,kBAAkB,IACnB,CAAC7B,MAAM,IACP,CAACC,QAAQ,EAAE;gBACX,OAAO,CAAC,CAAC,CAAC,WAAW;cACzB;cACA;cACA,IAAI,CAAC/C,MAAM,CAACyD,WAAW,GAAGiB,kBAAkB;cAC5CgB,EAAE,CAAClE,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACFkE,EAAE,CAAC/D,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;cACzB,IAAI,EAAE,CAACX,cAAc,IAAI0D,kBAAkB,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cACrE,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACnB,kBAAkB,EAAE,CAAC;YACnD,KAAK,CAAC;cACFkC,EAAE,CAAChE,IAAI,EAAE;cACTgE,EAAE,CAAClE,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACF4B,EAAE,GAAGL,QAAQ,KAAK,IAAI,IAAIA,QAAQ,KAAK,KAAK,CAAC,GAAGA,QAAQ,GAAG,CAAC,CAAC,EAAE6B,OAAO,GAAGxB,EAAE,CAACwB,OAAO,EAAEC,UAAU,GAAGzB,EAAE,CAACyB,UAAU,EAAEC,WAAW,GAAG1B,EAAE,CAAC0B,WAAW,EAAEC,UAAU,GAAG3B,EAAE,CAAC4C,QAAQ,EAAEhB,OAAO,GAAG5B,EAAE,CAAC4B,OAAO,EAAEC,MAAM,GAAG7B,EAAE,CAAC6B,MAAM;cACjNC,EAAE,GAAG,IAAI,CAACe,UAAU,EAAEd,UAAU,GAAGD,EAAE,CAACC,UAAU,EAAEC,IAAI,GAAGF,EAAE,CAACE,IAAI,EAAEC,KAAK,GAAGH,EAAE,CAACG,KAAK,EAAEC,QAAQ,GAAGJ,EAAE,CAACI,QAAQ,EAAEC,OAAO,GAAGL,EAAE,CAACK,OAAO;cAChIrE,KAAK,GAAG;gBACJY,aAAa,EAAEf,KAAK;gBACpBgB,UAAU,EAAEf,UAAU;gBACtBkF,eAAe,EAAE;kBACbC,SAAS,EAAEzH,IAAI,EAAE;kBACjB0H,aAAa,EAAE,IAAIhC,IAAI,EAAE,CAACiC,WAAW,EAAE;kBACvChI,WAAW,EAAEA,WAAW,CAACiI,MAAM;kBAC/BC,OAAO,EAAE3B,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAGA,OAAO,GAAGH,YAAY,CAACG,OAAO;kBAChF4B,UAAU,EAAE5I,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE6G,YAAY,CAACI,UAAU,CAAC,EAAEA,UAAU,CAAC;kBACvE4B,WAAW,EAAE7I,QAAQ,CAAC;oBAAE8I,UAAU,EAAEvB,UAAU;oBAAEwB,IAAI,EAAEvB,IAAI;oBAAEwB,KAAK,EAAEvB,KAAK;oBAAEwB,YAAY,EAAEtB,OAAO;oBAAEuB,QAAQ,EAAExB;kBAAS,CAAC,EAAEnH,sBAAsB,CAACP,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE6G,YAAY,CAACK,WAAW,CAAC,EAAEA,WAAW,CAAC,CAAC,CAAC;kBAC7MiC,QAAQ,EAAE5I,sBAAsB,CAACP,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE6G,YAAY,CAACuB,QAAQ,CAAC,EAAEjB,UAAU,CAAC,CAAC;kBAC3FiC,OAAO,EAAEpJ,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAE6G,YAAY,CAACO,OAAO,CAAC,EAAEA,OAAO,CAAC;kBAC9DiC,MAAM,EAAEhC,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAGR,YAAY,CAACQ,MAAM;kBAC3EiC,IAAI,EAAE;oBACFC,MAAM,EAAE,CAAC1B,EAAE,GAAG3C,MAAM,KAAK,IAAI,IAAIA,MAAM,KAAK,KAAK,CAAC,GAAGA,MAAM,GAAG2B,YAAY,CAAC3B,MAAM,MAAM,IAAI,IAAI2C,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAGf,kBAAkB,CAAC0C,UAAU;oBACjJC,cAAc,EAAExC,UAAU,KAAK,IAAI,IAAIA,UAAU,KAAK,KAAK,CAAC,GAAGA,UAAU,GAAGJ,YAAY,CAAC6C;kBAC7F;gBACJ;cACJ,CAAC;cACDnG,OAAO,GAAG,IAAI5C,qBAAqB,CAAC2C,KAAK,CAAC;cAC1C5B,MAAM,CAACe,KAAK,CAAC,mBAAmB,EAAEa,KAAK,CAAC;cACxC,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAClB,MAAM,CAACiB,cAAc,CAACe,IAAI,CAACb,OAAO,CAAC,CAAC;YAClE,KAAK,CAAC;cACFuE,EAAE,CAAChE,IAAI,EAAE;cACT,IAAI,CAACxB,mBAAmB,GAAG,IAAI;cAC/B,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;YAC3B,KAAK,CAAC;cACFsF,KAAK,GAAGE,EAAE,CAAChE,IAAI,EAAE;cACjB,MAAM8D,KAAK;YACf,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW;UAAC;QAEtC,CAAC,CAAC;MACN,CAAC,CAAC;IACN,CAAC;;IACD,IAAI,CAACG,cAAc,GAAG,YAAY;MAAE,OAAO9H,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACpF,IAAI2D,WAAW,EAAE8D,KAAK;QACtB,OAAOzJ,WAAW,CAAC,IAAI,EAAE,UAAUiC,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACyB,KAAK;YACZ,KAAK,CAAC;cACFzB,EAAE,CAAC4B,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAI,CAAC,CAAC,CAAC;cACzB,OAAO,CAAC,CAAC,CAAC,WAAW5D,WAAW,CAACwJ,GAAG,EAAE,CAAC;YAC3C,KAAK,CAAC;cACF/D,WAAW,GAAG1D,EAAE,CAAC2B,IAAI,EAAE;cACvB,IAAI,CAAC+B,WAAW,EAAE;gBACdnE,MAAM,CAACe,KAAK,CAAC,sBAAsB,CAAC;gBACpC,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;cAC/B;cACA,OAAO,CAAC,CAAC,CAAC,YAAYrC,WAAW,CAACyJ,KAAK,CAAChE,WAAW,CAAC,CAAC;YACzD,KAAK,CAAC;cACF8D,KAAK,GAAGxH,EAAE,CAAC2B,IAAI,EAAE;cACjBpC,MAAM,CAAC6C,KAAK,CAAC,4BAA4B,EAAEoF,KAAK,CAAC;cACjD,OAAO,CAAC,CAAC,CAAC,YAAY,IAAI,CAAC;YAC/B,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW;UAAC;QAEtC,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;;IACL,IAAI,CAAChH,yBAAyB,GAAG,UAAUmH,KAAK,EAAE;MAC9C,IAAIA,KAAK,KAAK,SAAS,EAAE;QACrB;QACA5H,KAAK,CAAC6H,sBAAsB,GAAG,CAAC,CAAC;MACrC;IACJ,CAAC;IACD,IAAI,CAAChF,UAAU,GAAG,UAAU5C,EAAE,EAAE;MAC5B,IAAI6H,UAAU,GAAG7H,EAAE,CAAC6H,UAAU;QAAEC,UAAU,GAAG9H,EAAE,CAAC8H,UAAU;QAAEC,QAAQ,GAAG/H,EAAE,CAAC+H,QAAQ;QAAEC,QAAQ,GAAGhI,EAAE,CAACgI,QAAQ;MAC1G,IAAIxG,EAAE,GAAGzB,KAAK,CAACkI,gBAAgB,CAACJ,UAAU,CAAC;QAAEK,YAAY,GAAG1G,EAAE,CAAC0G,YAAY;QAAEC,UAAU,GAAG3G,EAAE,CAAC2G,UAAU;QAAEC,UAAU,GAAG5G,EAAE,CAAC4G,UAAU;MACnI,OAAQ,CAAC,CAACN,UAAU,IAAII,YAAY,GAAGJ,UAAU,MAC5C,CAACC,QAAQ,IAAII,UAAU,GAAGJ,QAAQ,CAAC,KACnC,CAACC,QAAQ,IAAII,UAAU,GAAGJ,QAAQ,CAAC;IAC5C,CAAC;IACD;IACA,IAAI,CAACK,eAAe,GAAG,UAAUC,SAAS,EAAE;MACxC,OAAOvI,KAAK,CAAC6H,sBAAsB,CAACU,SAAS,CAAC,IAAI,CAAC;IACvD,CAAC;IACD,IAAI,CAACC,aAAa,GAAG,YAAY;MAC7B,IAAIrF,OAAO,GAAGnD,KAAK,CAACE,MAAM,CAACiD,OAAO;MAClC,IAAIsF,KAAK,GAAGpJ,aAAa,EAAE;MAC3B,IAAIqJ,IAAI,GAAGvF,OAAO,CAACkB,OAAO,CAACxE,uBAAuB,CAAC;MACnD;MACA,IAAI8I,OAAO,GAAGD,IAAI,GACZE,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,GAChB;QAAEI,KAAK,EAAE,CAAC;QAAEC,kBAAkB,EAAEN;MAAM,CAAC;MAC7C;MACA,OAAOE,OAAO,CAACI,kBAAkB,KAAKN,KAAK,GAAGE,OAAO,CAACG,KAAK,GAAG,CAAC;IACnE,CAAC;IACD,IAAI,CAACE,gBAAgB,GAAG,YAAY;MAChC,IAAI7F,OAAO,GAAGnD,KAAK,CAACE,MAAM,CAACiD,OAAO;MAClC,IAAIuF,IAAI,GAAGvF,OAAO,CAACkB,OAAO,CAACvE,uBAAuB,CAAC;MACnD;MACA,OAAO4I,IAAI,GAAGE,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC,GAAG,CAAC,CAAC;IACvC,CAAC;IACD,IAAI,CAACO,aAAa,GAAG,UAAUV,SAAS,EAAE;MACtC,IAAIW,QAAQ,GAAGlJ,KAAK,CAACgJ,gBAAgB,EAAE;MACvC;MACA,OAAOE,QAAQ,CAACX,SAAS,CAAC,IAAI,CAAC;IACnC,CAAC;IACD,IAAI,CAACL,gBAAgB,GAAG,UAAUK,SAAS,EAAE;MACzC,IAAI;QACA,OAAO;UACHJ,YAAY,EAAEnI,KAAK,CAACsI,eAAe,CAACC,SAAS,CAAC;UAC9CH,UAAU,EAAEpI,KAAK,CAACwI,aAAa,EAAE;UACjCH,UAAU,EAAErI,KAAK,CAACiJ,aAAa,CAACV,SAAS;QAC7C,CAAC;MACL,CAAC,CACD,OAAOY,GAAG,EAAE;QACR3J,MAAM,CAAC6C,KAAK,CAAC,2CAA2C,EAAE8G,GAAG,CAAC;MAClE;IACJ,CAAC;IACD,IAAI,CAACC,eAAe,GAAG,UAAUb,SAAS,EAAEO,KAAK,EAAE;MAC/C9I,KAAK,CAAC6H,sBAAsB,CAACU,SAAS,CAAC,GAAGO,KAAK;IACnD,CAAC;IACD,IAAI,CAACO,aAAa,GAAG,UAAUP,KAAK,EAAE;MAClC,IAAI3F,OAAO,GAAGnD,KAAK,CAACE,MAAM,CAACiD,OAAO;MAClC,IAAIiF,UAAU,GAAG;QACbU,KAAK,EAAEA,KAAK;QACZC,kBAAkB,EAAE1J,aAAa;MACrC,CAAC;MACD,IAAI;QACA8D,OAAO,CAACqB,OAAO,CAAC3E,uBAAuB,EAAE+I,IAAI,CAACU,SAAS,CAAClB,UAAU,CAAC,CAAC;MACxE,CAAC,CACD,OAAOe,GAAG,EAAE;QACR3J,MAAM,CAAC6C,KAAK,CAAC,+CAA+C,EAAE8G,GAAG,CAAC;MACtE;IACJ,CAAC;IACD,IAAI,CAACI,gBAAgB,GAAG,UAAUL,QAAQ,EAAE;MACxC,IAAI/F,OAAO,GAAGnD,KAAK,CAACE,MAAM,CAACiD,OAAO;MAClC,IAAI;QACAA,OAAO,CAACqB,OAAO,CAAC1E,uBAAuB,EAAE8I,IAAI,CAACU,SAAS,CAACJ,QAAQ,CAAC,CAAC;MACtE,CAAC,CACD,OAAOC,GAAG,EAAE;QACR3J,MAAM,CAAC6C,KAAK,CAAC,uCAAuC,EAAE8G,GAAG,CAAC;MAC9D;IACJ,CAAC;IACD,IAAI,CAACK,aAAa,GAAG,UAAUjB,SAAS,EAAEO,KAAK,EAAE;MAC7C,IAAI7I,EAAE;MACN,IAAIwJ,UAAU,GAAG3L,QAAQ,CAACA,QAAQ,CAAC,CAAC,CAAC,EAAEkC,KAAK,CAACgJ,gBAAgB,EAAE,CAAC,GAAG/I,EAAE,GAAG,CAAC,CAAC,EAAEA,EAAE,CAACsI,SAAS,CAAC,GAAGO,KAAK,EAAE7I,EAAE,EAAE;MACvGD,KAAK,CAACuJ,gBAAgB,CAACE,UAAU,CAAC;IACtC,CAAC;IACD,IAAI,CAACC,eAAe,GAAG,UAAUnB,SAAS,EAAE;MAAE,OAAOxK,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QAC9F,IAAIC,EAAE,EAAEkI,YAAY,EAAEC,UAAU,EAAEC,UAAU;QAC5C,OAAOrK,WAAW,CAAC,IAAI,EAAE,UAAUyD,EAAE,EAAE;UACnCxB,EAAE,GAAG,IAAI,CAACiI,gBAAgB,CAACK,SAAS,CAAC,EAAEJ,YAAY,GAAGlI,EAAE,CAACkI,YAAY,EAAEC,UAAU,GAAGnI,EAAE,CAACmI,UAAU,EAAEC,UAAU,GAAGpI,EAAE,CAACoI,UAAU;UAC7H,IAAI,CAACe,eAAe,CAACb,SAAS,EAAEJ,YAAY,GAAG,CAAC,CAAC;UACjD,IAAI,CAACkB,aAAa,CAACjB,UAAU,GAAG,CAAC,CAAC;UAClC,IAAI,CAACoB,aAAa,CAACjB,SAAS,EAAEF,UAAU,GAAG,CAAC,CAAC;UAC7C,OAAO,CAAC,CAAC,CAAC,WAAW;QACzB,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;;IACL,IAAI,CAAC5F,iBAAiB,GAAG,UAAUlB,QAAQ,EAAE;MACzC,OAAOA,QAAQ,CAACoI,GAAG,CAAC,UAAUhJ,OAAO,EAAE;QACnC,IAAImH,UAAU,GAAGnH,OAAO,CAACmH,UAAU;UAAE8B,YAAY,GAAGjJ,OAAO,CAACiJ,YAAY;QACxE,OAAO;UACHC,EAAE,EAAE/B,UAAU;UACdgC,OAAO,EAAE3K,cAAc,CAACwB,OAAO,CAAC;UAChCoJ,MAAM,EAAEzK,eAAe,CAACsK,YAAY,CAACI,MAAM,CAAC;UAC5CC,QAAQ,EAAE7K,eAAe,CAACuB,OAAO;QACrC,CAAC;MACL,CAAC,CAAC;IACN,CAAC;IACD,IAAI,CAACC,kBAAkB,GAAG,UAAUD,OAAO,EAAE4B,KAAK,EAAE;MAAE,OAAOxE,SAAS,CAACiC,KAAK,EAAE,KAAK,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY;QACtG,OAAOhC,WAAW,CAAC,IAAI,EAAE,UAAUiC,EAAE,EAAE;UACnC,QAAQA,EAAE,CAACyB,KAAK;YACZ,KAAK,CAAC;cACF,IAAI,CAAC,CAAC,IAAI,CAACrB,WAAW,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cAC/C,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAACsB,IAAI,EAAE,CAAC;YACrC,KAAK,CAAC;cACF1B,EAAE,CAAC2B,IAAI,EAAE;cACT3B,EAAE,CAACyB,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cACF9B,oBAAoB,CAAC2C,KAAK,EAAE5B,OAAO,CAAC;cACpC,IAAI,EAAE4B,KAAK,KAAKvD,uBAAuB,CAAC6B,iBAAiB,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC;cACnF,OAAO,CAAC,CAAC,CAAC,WAAW,IAAI,CAAC6I,eAAe,CAAC/I,OAAO,CAACkJ,EAAE,CAAC,CAAC;YAC1D,KAAK,CAAC;cACF5J,EAAE,CAAC2B,IAAI,EAAE;cACT3B,EAAE,CAACyB,KAAK,GAAG,CAAC;YAChB,KAAK,CAAC;cAAE,OAAO,CAAC,CAAC,CAAC,WAAW;UAAC;QAEtC,CAAC,CAAC;MACN,CAAC,CAAC;IAAE,CAAC;;IACL,IAAI,CAACmG,sBAAsB,GAAG,CAAC,CAAC;IAChC,IAAI,CAAC3H,MAAM,GAAG;MACViD,OAAO,EAAE,IAAI/E,aAAa,EAAE,CAAC8L,UAAU;IAC3C,CAAC;IACD,IAAI,CAAC/D,UAAU,GAAG,CAAClG,EAAE,GAAGhC,YAAY,CAACkI,UAAU,EAAE,MAAM,IAAI,IAAIlG,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC;EAC1F;EACA;AACJ;AACA;EACIF,mBAAmB,CAACoK,SAAS,CAACC,WAAW,GAAG,YAAY;IACpD,OAAOrK,mBAAmB,CAACsK,QAAQ;EACvC,CAAC;EACD;AACJ;AACA;EACItK,mBAAmB,CAACoK,SAAS,CAAC/F,cAAc,GAAG,YAAY;IACvD,OAAOrE,mBAAmB,CAACuK,WAAW;EAC1C,CAAC;EACD;AACJ;AACA;EACIvK,mBAAmB,CAACoK,SAAS,CAAC5G,eAAe,GAAG,YAAY;IACxD,OAAOxD,mBAAmB,CAACqD,YAAY;EAC3C,CAAC;EACDrD,mBAAmB,CAACsK,QAAQ,GAAG,eAAe;EAC9CtK,mBAAmB,CAACuK,WAAW,GAAG,gBAAgB;EAClDvK,mBAAmB,CAACqD,YAAY,GAAG,aAAa;EAChD,OAAOrD,mBAAmB;AAC9B,CAAC,EAAG;AACJ,eAAeA,mBAAmB"},"metadata":{},"sourceType":"module","externalDependencies":[]}