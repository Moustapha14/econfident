{"ast":null,"code":"// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __read } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport axios from 'axios';\nimport { AWSS3UploadTask } from './providers/AWSS3UploadTask';\nvar logger = new Logger('StorageClass');\nvar loggerStorageInstance = new Logger('Storage'); // Logging relating to Storage instance management\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar Storage = /** @class */function () {\n  /**\n   * Initialize Storage\n   * @param {Object} config - Configuration object for storage\n   */\n  function Storage() {\n    this._config = {};\n    this._pluggables = [];\n    this._cancelTokenSourceMap = new WeakMap();\n    logger.debug('Storage Options', this._config);\n    this.get = this.get.bind(this);\n    this.put = this.put.bind(this);\n    this.remove = this.remove.bind(this);\n    this.list = this.list.bind(this);\n  }\n  Storage.prototype.getModuleName = function () {\n    return 'Storage';\n  };\n  /**\n   * add plugin into Storage category\n   * @param {Object} pluggable - an instance of the plugin\n   */\n  Storage.prototype.addPluggable = function (pluggable) {\n    if (pluggable && pluggable.getCategory() === 'Storage') {\n      this._pluggables.push(pluggable);\n      var config = {};\n      config = pluggable.configure(this._config[pluggable.getProviderName()]);\n      return config;\n    }\n  };\n  /**\n   * Get the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.getPluggable = function (providerName) {\n    var pluggable = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === providerName;\n    });\n    if (pluggable === undefined) {\n      logger.debug('No plugin found with providerName', providerName);\n      return null;\n    } else return pluggable;\n  };\n  /**\n   * Remove the plugin object\n   * @param providerName - the name of the plugin\n   */\n  Storage.prototype.removePluggable = function (providerName) {\n    this._pluggables = this._pluggables.filter(function (pluggable) {\n      return pluggable.getProviderName() !== providerName;\n    });\n    return;\n  };\n  /**\n   * Configure Storage\n   * @param {Object} config - Configuration object for storage\n   * @return {Object} - Current configuration\n   */\n  Storage.prototype.configure = function (config) {\n    var _this = this;\n    var _a;\n    logger.debug('configure Storage');\n    if (!config) return this._config;\n    var amplifyConfig = parseAWSExports(config);\n    var storageConfig = (_a = amplifyConfig.Storage) !== null && _a !== void 0 ? _a : {};\n    var defaultProviderConfigKeys = ['bucket', 'region', 'level', 'track', 'customPrefix', 'serverSideEncryption', 'SSECustomerAlgorithm', 'SSECustomerKey', 'SSECustomerKeyMD5', 'SSEKMSKeyId'];\n    var hasDefaultProviderConfigKeys = function (config) {\n      return Object.keys(config).find(function (key) {\n        return defaultProviderConfigKeys.includes(key);\n      });\n    };\n    if (hasDefaultProviderConfigKeys(storageConfig) && !storageConfig[DEFAULT_PROVIDER]) {\n      storageConfig[DEFAULT_PROVIDER] = {};\n    }\n    Object.entries(storageConfig).forEach(function (_a) {\n      var _b = __read(_a, 2),\n        key = _b[0],\n        value = _b[1];\n      if (key && defaultProviderConfigKeys.includes(key) && value !== undefined) {\n        storageConfig[DEFAULT_PROVIDER][key] = value;\n        delete storageConfig[key];\n      }\n    });\n    // only update new values for each provider\n    Object.keys(storageConfig).forEach(function (providerName) {\n      if (typeof storageConfig[providerName] !== 'string') {\n        _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), storageConfig[providerName]);\n      }\n    });\n    this._pluggables.forEach(function (pluggable) {\n      pluggable.configure(_this._config[pluggable.getProviderName()]);\n    });\n    if (this._pluggables.length === 0) {\n      this.addPluggable(new AWSS3Provider());\n    }\n    return this._config;\n  };\n  Storage.prototype.getCancellableTokenSource = function () {\n    return axios.CancelToken.source();\n  };\n  Storage.prototype.updateRequestToBeCancellable = function (request, cancelTokenSource) {\n    this._cancelTokenSourceMap.set(request, cancelTokenSource);\n  };\n  Storage.prototype.isUploadTask = function (x) {\n    return typeof x !== 'undefined' && typeof x['pause'] === 'function' && typeof x['resume'] === 'function';\n  };\n  Storage.prototype.cancel = function (request, message) {\n    if (request instanceof AWSS3UploadTask) {\n      return request._cancel();\n    }\n    var cancelTokenSource = this._cancelTokenSourceMap.get(request);\n    if (cancelTokenSource) {\n      cancelTokenSource.cancel(message);\n    } else {\n      logger.debug('The request does not map to any cancel token');\n    }\n  };\n  Storage.prototype.copy = function (src, dest, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    if (typeof prov.copy !== 'function') {\n      return Promise.reject(\".copy is not implemented on provider \" + prov.getProviderName());\n    }\n    var responsePromise = prov.copy(src, dest, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n    return responsePromise;\n  };\n  Storage.prototype.get = function (key, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    var responsePromise = prov.get(key, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n    return responsePromise;\n  };\n  Storage.prototype.isCancelError = function (error) {\n    return axios.isCancel(error);\n  };\n  Storage.prototype.put = function (key, object, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    var cancelTokenSource = this.getCancellableTokenSource();\n    var response = prov.put(key, object, __assign(__assign({}, config), {\n      cancelTokenSource: cancelTokenSource\n    }));\n    if (!this.isUploadTask(response)) {\n      this.updateRequestToBeCancellable(response, cancelTokenSource);\n    }\n    return response;\n  };\n  Storage.prototype.remove = function (key, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return prov.remove(key, config);\n  };\n  Storage.prototype.list = function (path, config) {\n    var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n    var prov = this._pluggables.find(function (pluggable) {\n      return pluggable.getProviderName() === provider;\n    });\n    if (prov === undefined) {\n      logger.debug('No plugin found with providerName', provider);\n      return Promise.reject('No plugin found in Storage for the provider');\n    }\n    return prov.list(path, config);\n  };\n  return Storage;\n}();\nexport { Storage };\n/**\n * Configure & register Storage singleton instance.\n */\nvar _instance = null;\nvar getInstance = function () {\n  if (_instance) {\n    return _instance;\n  }\n  loggerStorageInstance.debug('Create Storage Instance, debug');\n  _instance = new Storage();\n  _instance.vault = new Storage();\n  var old_configure = _instance.configure;\n  _instance.configure = function (options) {\n    loggerStorageInstance.debug('storage configure called');\n    var vaultConfig = __assign({}, old_configure.call(_instance, options));\n    // set level private for each provider for the vault\n    Object.keys(vaultConfig).forEach(function (providerName) {\n      if (typeof vaultConfig[providerName] !== 'string') {\n        vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), {\n          level: 'private'\n        });\n      }\n    });\n    loggerStorageInstance.debug('storage vault configure called');\n    _instance.vault.configure(vaultConfig);\n  };\n  return _instance;\n};\nexport var StorageInstance = getInstance();\nAmplify.register(StorageInstance);","map":{"version":3,"names":["__assign","__read","Amplify","ConsoleLogger","Logger","parseAWSExports","AWSS3Provider","axios","AWSS3UploadTask","logger","loggerStorageInstance","DEFAULT_PROVIDER","Storage","_config","_pluggables","_cancelTokenSourceMap","WeakMap","debug","get","bind","put","remove","list","prototype","getModuleName","addPluggable","pluggable","getCategory","push","config","configure","getProviderName","getPluggable","providerName","find","undefined","removePluggable","filter","_this","_a","amplifyConfig","storageConfig","defaultProviderConfigKeys","hasDefaultProviderConfigKeys","Object","keys","key","includes","entries","forEach","_b","value","length","getCancellableTokenSource","CancelToken","source","updateRequestToBeCancellable","request","cancelTokenSource","set","isUploadTask","x","cancel","message","_cancel","copy","src","dest","provider","prov","Promise","reject","responsePromise","isCancelError","error","isCancel","object","response","path","_instance","getInstance","vault","old_configure","options","vaultConfig","call","level","StorageInstance","register"],"sources":["/Users/macbook/Documents/Chatapp/temp-repo-chatbot/frontend/node_modules/@aws-amplify/storage/lib-esm/Storage.js"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { __assign, __read } from \"tslib\";\nimport { Amplify, ConsoleLogger as Logger, parseAWSExports, } from '@aws-amplify/core';\nimport { AWSS3Provider } from './providers';\nimport axios from 'axios';\nimport { AWSS3UploadTask } from './providers/AWSS3UploadTask';\nvar logger = new Logger('StorageClass');\nvar loggerStorageInstance = new Logger('Storage'); // Logging relating to Storage instance management\nvar DEFAULT_PROVIDER = 'AWSS3';\n/**\n * Provide storage methods to use AWS S3\n */\nvar Storage = /** @class */ (function () {\n    /**\n     * Initialize Storage\n     * @param {Object} config - Configuration object for storage\n     */\n    function Storage() {\n        this._config = {};\n        this._pluggables = [];\n        this._cancelTokenSourceMap = new WeakMap();\n        logger.debug('Storage Options', this._config);\n        this.get = this.get.bind(this);\n        this.put = this.put.bind(this);\n        this.remove = this.remove.bind(this);\n        this.list = this.list.bind(this);\n    }\n    Storage.prototype.getModuleName = function () {\n        return 'Storage';\n    };\n    /**\n     * add plugin into Storage category\n     * @param {Object} pluggable - an instance of the plugin\n     */\n    Storage.prototype.addPluggable = function (pluggable) {\n        if (pluggable && pluggable.getCategory() === 'Storage') {\n            this._pluggables.push(pluggable);\n            var config = {};\n            config = pluggable.configure(this._config[pluggable.getProviderName()]);\n            return config;\n        }\n    };\n    /**\n     * Get the plugin object\n     * @param providerName - the name of the plugin\n     */\n    Storage.prototype.getPluggable = function (providerName) {\n        var pluggable = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === providerName; });\n        if (pluggable === undefined) {\n            logger.debug('No plugin found with providerName', providerName);\n            return null;\n        }\n        else\n            return pluggable;\n    };\n    /**\n     * Remove the plugin object\n     * @param providerName - the name of the plugin\n     */\n    Storage.prototype.removePluggable = function (providerName) {\n        this._pluggables = this._pluggables.filter(function (pluggable) { return pluggable.getProviderName() !== providerName; });\n        return;\n    };\n    /**\n     * Configure Storage\n     * @param {Object} config - Configuration object for storage\n     * @return {Object} - Current configuration\n     */\n    Storage.prototype.configure = function (config) {\n        var _this = this;\n        var _a;\n        logger.debug('configure Storage');\n        if (!config)\n            return this._config;\n        var amplifyConfig = parseAWSExports(config);\n        var storageConfig = (_a = amplifyConfig.Storage) !== null && _a !== void 0 ? _a : {};\n        var defaultProviderConfigKeys = [\n            'bucket',\n            'region',\n            'level',\n            'track',\n            'customPrefix',\n            'serverSideEncryption',\n            'SSECustomerAlgorithm',\n            'SSECustomerKey',\n            'SSECustomerKeyMD5',\n            'SSEKMSKeyId',\n        ];\n        var hasDefaultProviderConfigKeys = function (config) {\n            return Object.keys(config).find(function (key) { return defaultProviderConfigKeys.includes(key); });\n        };\n        if (hasDefaultProviderConfigKeys(storageConfig) &&\n            !storageConfig[DEFAULT_PROVIDER]) {\n            storageConfig[DEFAULT_PROVIDER] = {};\n        }\n        Object.entries(storageConfig).forEach(function (_a) {\n            var _b = __read(_a, 2), key = _b[0], value = _b[1];\n            if (key &&\n                defaultProviderConfigKeys.includes(key) &&\n                value !== undefined) {\n                storageConfig[DEFAULT_PROVIDER][key] = value;\n                delete storageConfig[key];\n            }\n        });\n        // only update new values for each provider\n        Object.keys(storageConfig).forEach(function (providerName) {\n            if (typeof storageConfig[providerName] !== 'string') {\n                _this._config[providerName] = __assign(__assign({}, _this._config[providerName]), storageConfig[providerName]);\n            }\n        });\n        this._pluggables.forEach(function (pluggable) {\n            pluggable.configure(_this._config[pluggable.getProviderName()]);\n        });\n        if (this._pluggables.length === 0) {\n            this.addPluggable(new AWSS3Provider());\n        }\n        return this._config;\n    };\n    Storage.prototype.getCancellableTokenSource = function () {\n        return axios.CancelToken.source();\n    };\n    Storage.prototype.updateRequestToBeCancellable = function (request, cancelTokenSource) {\n        this._cancelTokenSourceMap.set(request, cancelTokenSource);\n    };\n    Storage.prototype.isUploadTask = function (x) {\n        return (typeof x !== 'undefined' &&\n            typeof x['pause'] === 'function' &&\n            typeof x['resume'] === 'function');\n    };\n    Storage.prototype.cancel = function (request, message) {\n        if (request instanceof AWSS3UploadTask) {\n            return request._cancel();\n        }\n        var cancelTokenSource = this._cancelTokenSourceMap.get(request);\n        if (cancelTokenSource) {\n            cancelTokenSource.cancel(message);\n        }\n        else {\n            logger.debug('The request does not map to any cancel token');\n        }\n    };\n    Storage.prototype.copy = function (src, dest, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var cancelTokenSource = this.getCancellableTokenSource();\n        if (typeof prov.copy !== 'function') {\n            return Promise.reject(\".copy is not implemented on provider \" + prov.getProviderName());\n        }\n        var responsePromise = prov.copy(src, dest, __assign(__assign({}, config), { cancelTokenSource: cancelTokenSource }));\n        this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n        return responsePromise;\n    };\n    Storage.prototype.get = function (key, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var cancelTokenSource = this.getCancellableTokenSource();\n        var responsePromise = prov.get(key, __assign(__assign({}, config), { cancelTokenSource: cancelTokenSource }));\n        this.updateRequestToBeCancellable(responsePromise, cancelTokenSource);\n        return responsePromise;\n    };\n    Storage.prototype.isCancelError = function (error) {\n        return axios.isCancel(error);\n    };\n    Storage.prototype.put = function (key, object, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        var cancelTokenSource = this.getCancellableTokenSource();\n        var response = prov.put(key, object, __assign(__assign({}, config), { cancelTokenSource: cancelTokenSource }));\n        if (!this.isUploadTask(response)) {\n            this.updateRequestToBeCancellable(response, cancelTokenSource);\n        }\n        return response;\n    };\n    Storage.prototype.remove = function (key, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return prov.remove(key, config);\n    };\n    Storage.prototype.list = function (path, config) {\n        var provider = (config === null || config === void 0 ? void 0 : config.provider) || DEFAULT_PROVIDER;\n        var prov = this._pluggables.find(function (pluggable) { return pluggable.getProviderName() === provider; });\n        if (prov === undefined) {\n            logger.debug('No plugin found with providerName', provider);\n            return Promise.reject('No plugin found in Storage for the provider');\n        }\n        return prov.list(path, config);\n    };\n    return Storage;\n}());\nexport { Storage };\n/**\n * Configure & register Storage singleton instance.\n */\nvar _instance = null;\nvar getInstance = function () {\n    if (_instance) {\n        return _instance;\n    }\n    loggerStorageInstance.debug('Create Storage Instance, debug');\n    _instance = new Storage();\n    _instance.vault = new Storage();\n    var old_configure = _instance.configure;\n    _instance.configure = function (options) {\n        loggerStorageInstance.debug('storage configure called');\n        var vaultConfig = __assign({}, old_configure.call(_instance, options));\n        // set level private for each provider for the vault\n        Object.keys(vaultConfig).forEach(function (providerName) {\n            if (typeof vaultConfig[providerName] !== 'string') {\n                vaultConfig[providerName] = __assign(__assign({}, vaultConfig[providerName]), { level: 'private' });\n            }\n        });\n        loggerStorageInstance.debug('storage vault configure called');\n        _instance.vault.configure(vaultConfig);\n    };\n    return _instance;\n};\nexport var StorageInstance = getInstance();\nAmplify.register(StorageInstance);\n//# sourceMappingURL=Storage.js.map"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}